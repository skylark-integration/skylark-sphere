{"version":3,"sources":["components/PSVNavBar.js"],"names":["define","PhotoSphereViewer","PSVNavBarAutorotateButton","PSVNavBarCustomButton","PSVNavBarDownloadButton","PSVNavBarFullscreenButton","PSVNavBarGyroscopeButton","PSVNavBarMarkersButton","PSVNavBarStereoButton","PSVNavBarZoomButton","PSVUtils","PSVError","PSVComponent","PSVNavBarCaption","PSVNavBar","psv","call","this","config","navbar","items","clone","DEFAULTS","split","Array","isArray","console","warn","forEach","enabled","key","push","bind","sort","a","b","indexOf","create","prototype","Object","constructor","className","publicMethods","button","id","caption","destroy","item","length","getNavbarButton","silent","some","showNavbar","toggleNavbar","hideNavbar","active","toggleClass","container"],"mappings":"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","file":"../../components/PSVNavBar.js","sourcesContent":["define([\n  \"../_psv/ctoc\",\n  \"../buttons/AutorotateButton\",\n  \"../buttons/CustomButton\",\n  \"../buttons/DownloadButton\",\n  \"../buttons/FullscreenButton\",\n  \"../buttons/GyroscopeButton\",\n  \"../buttons/MarkersButton\",\n  \"../buttons/StereoButton\",\n  \"../buttons/ZoomButton\",\n  \"../PSVUtils\",\n  \"../PSVError\",\n  \"./PSVComponent\",\n  \"./PSVNavBarCaption\"\n],function(\n  PhotoSphereViewer,\n  PSVNavBarAutorotateButton,\n  PSVNavBarCustomButton,\n  PSVNavBarDownloadButton,\n  PSVNavBarFullscreenButton,\n  PSVNavBarGyroscopeButton,\n  PSVNavBarMarkersButton,\n  PSVNavBarStereoButton,\n  PSVNavBarZoomButton,\n  PSVUtils,\n  PSVError,\n  PSVComponent,\n  PSVNavBarCaption\n){\n  \"use strict\";\n  /**\n   * Navigation bar class\n   * @param {PhotoSphereViewer} psv\n   * @constructor\n   * @extends module:components.PSVComponent\n   * @memberof module:components\n   */\n  function PSVNavBar(psv) {\n    PSVComponent.call(this, psv);\n\n    /**\n     * @member {Object}\n     * @readonly\n     * @private\n     */\n    this.config = this.psv.config.navbar;\n\n    /**\n     * @summary List of buttons of the navbar\n     * @member {Array.<module:components/buttons.PSVNavBarButton>}\n     * @readonly\n     */\n    this.items = [];\n\n    // all buttons\n    if (this.config === true) {\n      this.config = PSVUtils.clone(PhotoSphereViewer.DEFAULTS.navbar);\n    }\n    // space separated list\n    else if (typeof this.config === 'string') {\n      this.config = this.config.split(' ');\n    }\n    // migration from object\n    else if (!Array.isArray(this.config)) {\n      console.warn('PhotoSphereViewer: hashmap form of \"navbar\" is deprecated, use an array instead.');\n\n      var config = this.config;\n      this.config = [];\n\n      PSVUtils.forEach(config, function(enabled, key) {\n        if (enabled) {\n          this.config.push(key);\n        }\n      }.bind(this));\n\n      this.config.sort(function(a, b) {\n        return PhotoSphereViewer.DEFAULTS.navbar.indexOf(a) - PhotoSphereViewer.DEFAULTS.navbar.indexOf(b);\n      });\n    }\n\n    this.create();\n  }\n\n  PSVNavBar.prototype = Object.create(PSVComponent.prototype);\n  PSVNavBar.prototype.constructor = PSVNavBar;\n\n  PSVNavBar.className = 'psv-navbar psv-navbar--open';\n  PSVNavBar.publicMethods = ['showNavbar', 'hideNavbar', 'toggleNavbar', 'getNavbarButton'];\n\n  /**\n   * @override\n   * @throws {PSVError} when the configuration is incorrect\n   */\n  PSVNavBar.prototype.create = function() {\n    PSVComponent.prototype.create.call(this);\n\n    this.config.forEach(function(button) {\n      if (typeof button === 'object') {\n        this.items.push(new PSVNavBarCustomButton(this, button));\n      }\n      else {\n        switch (button) {\n          case PSVNavBarAutorotateButton.id:\n            this.items.push(new PSVNavBarAutorotateButton(this));\n            break;\n\n          case PSVNavBarZoomButton.id:\n            this.items.push(new PSVNavBarZoomButton(this));\n            break;\n\n          case PSVNavBarDownloadButton.id:\n            this.items.push(new PSVNavBarDownloadButton(this));\n            break;\n\n          case PSVNavBarMarkersButton.id:\n            this.items.push(new PSVNavBarMarkersButton(this));\n            break;\n\n          case PSVNavBarFullscreenButton.id:\n            this.items.push(new PSVNavBarFullscreenButton(this));\n            break;\n\n          case PSVNavBarStereoButton.id:\n            this.items.push(new PSVNavBarStereoButton(this));\n            break;\n\n          case PSVNavBarGyroscopeButton.id:\n            this.items.push(new PSVNavBarGyroscopeButton(this));\n            break;\n\n          case 'caption':\n            this.items.push(new PSVNavBarCaption(this, this.psv.config.caption));\n            break;\n\n          /* falls through */\n          default:\n            if (button.indexOf('spacer') === 0) {\n              console.warn('PhotoSphereViewer: navbar spacers have been removed.');\n            }\n            else {\n              throw new PSVError('Unknown button ' + button);\n            }\n            break;\n        }\n      }\n    }, this);\n  };\n\n  /**\n   * @override\n   */\n  PSVNavBar.prototype.destroy = function() {\n    this.items.forEach(function(item) {\n      item.destroy();\n    });\n\n    this.items.length = 0;\n    delete this.config;\n\n    PSVComponent.prototype.destroy.call(this);\n  };\n\n  /**\n   * @summary Returns a button by its identifier\n   * @param {string} id\n   * @param {boolean} [silent=false]\n   * @returns {module:components/buttons.PSVNavBarButton}\n   */\n  PSVNavBar.prototype.getNavbarButton = function(id, silent) {\n    var button = null;\n\n    this.items.some(function(item) {\n      if (item.id === id) {\n        button = item;\n        return true;\n      }\n      else {\n        return false;\n      }\n    });\n\n    if (!button && !silent) {\n      console.warn('PhotoSphereViewer: button \"' + id + '\" not found in the navbar.');\n    }\n\n    return button;\n  };\n\n  /**\n   * @summary Shows the navbar\n   */\n  PSVNavBar.prototype.showNavbar = function() {\n    this.toggleNavbar(true);\n  };\n\n  /**\n   * @summary Hides the navbar\n   */\n  PSVNavBar.prototype.hideNavbar = function() {\n    this.toggleNavbar(false);\n  };\n\n  /**\n   * @summary Toggles the navbar\n   * @param {boolean} active\n   */\n  PSVNavBar.prototype.toggleNavbar = function(active) {\n    PSVUtils.toggleClass(this.container, 'psv-navbar--open', active);\n  };\n\n\n  return PSVNavBar;\n});\n"]}
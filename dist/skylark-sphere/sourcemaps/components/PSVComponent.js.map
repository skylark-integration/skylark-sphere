{"version":3,"sources":["components/PSVComponent.js"],"names":["define","PhotoSphereViewer","PSVComponent","parent","this","psv","container","visible","constructor","publicMethods","forEach","method","bind","className","prototype","create","document","createElement","appendChild","destroy","removeChild","hide","style","display","show"],"mappings":";;;;;;;AAAAA,QACE,gBACA,SACAC,GAEA,aAWA,SAASC,EAAaC,GAKpBC,KAAKC,IAAMF,aAAkBF,EAAoBE,EAASA,EAAOE,IAMjED,KAAKD,OAASA,EAMdC,KAAKE,UAAY,KAOjBF,KAAKG,SAAU,EAGXH,KAAKI,YAAYC,eACnBL,KAAKI,YAAYC,cAAcC,QAAQ,SAASC,GAC9CP,KAAKC,IAAIM,GAAUP,KAAKO,GAAQC,KAAKR,OACpCA,MAoEP,OA3DAF,EAAaW,UAAY,KAOzBX,EAAaO,iBAMbP,EAAaY,UAAUC,OAAS,WAC9BX,KAAKE,UAAYU,SAASC,cAAc,OAEpCb,KAAKI,YAAYK,YACnBT,KAAKE,UAAUO,UAAYT,KAAKI,YAAYK,WAG9CT,KAAKD,OAAOG,UAAUY,YAAYd,KAAKE,YAOzCJ,EAAaY,UAAUK,QAAU,WAC/Bf,KAAKD,OAAOG,UAAUc,YAAYhB,KAAKE,WAEnCF,KAAKI,YAAYC,eACnBL,KAAKI,YAAYC,cAAcC,QAAQ,SAASC,UACvCP,KAAKC,IAAIM,IACfP,aAGEA,KAAKE,iBACLF,KAAKC,WACLD,KAAKD,QAOdD,EAAaY,UAAUO,KAAO,WAC5BjB,KAAKE,UAAUgB,MAAMC,QAAU,OAC/BnB,KAAKG,SAAU,GAOjBL,EAAaY,UAAUU,KAAO,WAC5BpB,KAAKE,UAAUgB,MAAMC,QAAU,GAC/BnB,KAAKG,SAAU,GAGVL","file":"../../components/PSVComponent.js","sourcesContent":["define([\n  \"../_psv/ctoc\"\n],function(\n  PhotoSphereViewer\n){\n  \"use strict\";\n  /**\n   * @module components\n   */\n\n  /**\n   * Base sub-component class\n   * @param {PhotoSphereViewer | module:components.PSVComponent} parent\n   * @constructor\n   * @memberof module:components\n   */\n  function PSVComponent(parent) {\n    /**\n     * @member {PhotoSphereViewer}\n     * @readonly\n     */\n    this.psv = parent instanceof PhotoSphereViewer ? parent : parent.psv;\n\n    /**\n     * @member {PhotoSphereViewer|module:components.PSVComponent}\n     * @readonly\n     */\n    this.parent = parent;\n\n    /**\n     * @member {HTMLElement}\n     * @readonly\n     */\n    this.container = null;\n\n    /**\n     * @summary Visibility of the component\n     * @member {boolean}\n     * @readonly\n     */\n    this.visible = true;\n\n    // expose some methods to the viewer\n    if (this.constructor.publicMethods) {\n      this.constructor.publicMethods.forEach(function(method) {\n        this.psv[method] = this[method].bind(this);\n      }, this);\n    }\n  }\n\n  /**\n   * @summary CSS class added to the component's container\n   * @member {string}\n   * @readonly\n   */\n  PSVComponent.className = null;\n\n  /**\n   * @summary List of component's methods which are bound the the main viewer\n   * @member {string[]}\n   * @readonly\n   */\n  PSVComponent.publicMethods = [];\n\n  /**\n   * @summary Creates the component\n   * @protected\n   */\n  PSVComponent.prototype.create = function() {\n    this.container = document.createElement('div');\n\n    if (this.constructor.className) {\n      this.container.className = this.constructor.className;\n    }\n\n    this.parent.container.appendChild(this.container);\n  };\n\n  /**\n   * @summary Destroys the component\n   * @protected\n   */\n  PSVComponent.prototype.destroy = function() {\n    this.parent.container.removeChild(this.container);\n\n    if (this.constructor.publicMethods) {\n      this.constructor.publicMethods.forEach(function(method) {\n        delete this.psv[method];\n      }, this);\n    }\n\n    delete this.container;\n    delete this.psv;\n    delete this.parent;\n  };\n\n  /**\n   * @summary Hides the component\n   * @protected\n   */\n  PSVComponent.prototype.hide = function() {\n    this.container.style.display = 'none';\n    this.visible = false;\n  };\n\n  /**\n   * @summary Displays the component\n   * @protected\n   */\n  PSVComponent.prototype.show = function() {\n    this.container.style.display = '';\n    this.visible = true;\n  };\n\n  return PSVComponent;\n});"]}
{"version":3,"sources":["components/PSVPanel.js"],"names":["define","PhotoSphereViewer","PSVUtils","PSVComponent","PSVPanel","psv","call","this","content","prop","mouse_x","mouse_y","mousedown","opened","create","prototype","Object","constructor","className","publicMethods","container","innerHTML","querySelector","addEventListener","hidePanel","bind","config","mousewheel","SYSTEM","mouseWheelEvent","e","stopPropagation","resizer","destroy","removeEventListener","handleEvent","type","_onMouseDown","_onTouchStart","_onMouseMove","_onTouchMove","_onMouseUp","showPanel","noMargin","scrollTop","classList","add","toggleClass","trigger","remove","evt","_startResize","changedTouches","_resize","touches","parseInt","clientX","clientY","x","y","style","width","offsetWidth"],"mappings":"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","file":"../../components/PSVPanel.js","sourcesContent":["define([\n  \"../_psv/ctoc\",\n  \"../PSVUtils\",\n  \"./PSVComponent\"\n],function(\n  PhotoSphereViewer,\n  PSVUtils,\n  PSVComponent\n){\n  \"use strict\";\n  /**\n   * Panel class\n   * @param {PhotoSphereViewer} psv\n   * @constructor\n   * @extends module:components.PSVComponent\n   * @memberof module:components\n   */\n  function PSVPanel(psv) {\n    PSVComponent.call(this, psv);\n\n    /**\n     * @summary Content container\n     * @member {HTMLElement}\n     * @readonly\n     * @private\n     */\n    this.content = null;\n\n    /**\n     * @member {Object}\n     * @private\n     */\n    this.prop = {\n      mouse_x: 0,\n      mouse_y: 0,\n      mousedown: false,\n      opened: false\n    };\n\n    this.create();\n  }\n\n  PSVPanel.prototype = Object.create(PSVComponent.prototype);\n  PSVPanel.prototype.constructor = PSVPanel;\n\n  PSVPanel.className = 'psv-panel';\n  PSVPanel.publicMethods = ['showPanel', 'hidePanel'];\n\n  /**\n   * @override\n   */\n  PSVPanel.prototype.create = function() {\n    PSVComponent.prototype.create.call(this);\n\n    this.container.innerHTML =\n      '<div class=\"psv-panel-resizer\"></div>' +\n      '<div class=\"psv-panel-close-button\"></div>' +\n      '<div class=\"psv-panel-content\"></div>';\n\n    this.content = this.container.querySelector('.psv-panel-content');\n\n    var closeBtn = this.container.querySelector('.psv-panel-close-button');\n    closeBtn.addEventListener('click', this.hidePanel.bind(this));\n\n    // Stop event bubling from panel\n    if (this.psv.config.mousewheel) {\n      this.container.addEventListener(PhotoSphereViewer.SYSTEM.mouseWheelEvent, function(e) {\n        e.stopPropagation();\n      });\n    }\n\n    // Event for panel resizing + stop bubling\n    var resizer = this.container.querySelector('.psv-panel-resizer');\n    resizer.addEventListener('mousedown', this);\n    resizer.addEventListener('touchstart', this);\n    this.psv.container.addEventListener('mouseup', this);\n    this.psv.container.addEventListener('touchend', this);\n    this.psv.container.addEventListener('mousemove', this);\n    this.psv.container.addEventListener('touchmove', this);\n  };\n\n  /**\n   * @override\n   */\n  PSVPanel.prototype.destroy = function() {\n    this.psv.container.removeEventListener('mousemove', this);\n    this.psv.container.removeEventListener('touchmove', this);\n    this.psv.container.removeEventListener('mouseup', this);\n    this.psv.container.removeEventListener('touchend', this);\n\n    delete this.prop;\n    delete this.content;\n\n    PSVComponent.prototype.destroy.call(this);\n  };\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  PSVPanel.prototype.handleEvent = function(e) {\n    switch (e.type) {\n      // @formatter:off\n      case 'mousedown': this._onMouseDown(e); break;\n      case 'touchstart': this._onTouchStart(e); break;\n      case 'mousemove': this._onMouseMove(e); break;\n      case 'touchmove': this._onTouchMove(e); break;\n      case 'mouseup': this._onMouseUp(e); break;\n      case 'touchend': this._onMouseUp(e); break;\n      // @formatter:on\n    }\n  };\n\n  /**\n   * @summary Shows the panel\n   * @param {string} content\n   * @param {boolean} [noMargin=false]\n   * @fires module:components.PSVPanel.open-panel\n   */\n  PSVPanel.prototype.showPanel = function(content, noMargin) {\n    this.content.innerHTML = content;\n    this.content.scrollTop = 0;\n    this.container.classList.add('psv-panel--open');\n\n    PSVUtils.toggleClass(this.content, 'psv-panel-content--no-margin', noMargin === true);\n\n    this.prop.opened = true;\n\n    /**\n     * @event open-panel\n     * @memberof module:components.PSVPanel\n     * @summary Triggered when the panel is opened\n     */\n    this.psv.trigger('open-panel');\n  };\n\n  /**\n   * @summary Hides the panel\n   * @fires module:components.PSVPanel.close-panel\n   */\n  PSVPanel.prototype.hidePanel = function() {\n    this.content.innerHTML = null;\n    this.prop.opened = false;\n    this.container.classList.remove('psv-panel--open');\n\n    /**\n     * @event close-panel\n     * @memberof module:components.PSVPanel\n     * @summary Trigered when the panel is closed\n     */\n    this.psv.trigger('close-panel');\n  };\n\n  /**\n   * @summary Handles mouse down events\n   * @param {MouseEvent} evt\n   * @private\n   */\n  PSVPanel.prototype._onMouseDown = function(evt) {\n    evt.stopPropagation();\n    this._startResize(evt);\n  };\n\n  /**\n   * @summary Handles touch events\n   * @param {TouchEvent} evt\n   * @private\n   */\n  PSVPanel.prototype._onTouchStart = function(evt) {\n    evt.stopPropagation();\n    this._startResize(evt.changedTouches[0]);\n  };\n\n  /**\n   * @summary Handles mouse up events\n   * @param {MouseEvent} evt\n   * @private\n   */\n  PSVPanel.prototype._onMouseUp = function(evt) {\n    if (this.prop.mousedown) {\n      evt.stopPropagation();\n      this.prop.mousedown = false;\n      this.content.classList.remove('psv-panel-content--no-interaction');\n    }\n  };\n\n  /**\n   * @summary Handles mouse move events\n   * @param {MouseEvent} evt\n   * @private\n   */\n  PSVPanel.prototype._onMouseMove = function(evt) {\n    if (this.prop.mousedown) {\n      evt.stopPropagation();\n      this._resize(evt);\n    }\n  };\n\n  /**\n   * @summary Handles touch move events\n   * @param {TouchEvent} evt\n   * @private\n   */\n  PSVPanel.prototype._onTouchMove = function(evt) {\n    if (this.prop.mousedown) {\n      this._resize(evt.touches[0]);\n    }\n  };\n\n  /**\n   * @summary Initializes the panel resize\n   * @param {MouseEvent|Touch} evt\n   * @private\n   */\n  PSVPanel.prototype._startResize = function(evt) {\n    this.prop.mouse_x = parseInt(evt.clientX);\n    this.prop.mouse_y = parseInt(evt.clientY);\n    this.prop.mousedown = true;\n    this.content.classList.add('psv-panel-content--no-interaction');\n  };\n\n  /**\n   * @summary Resizes the panel\n   * @param {MouseEvent|Touch} evt\n   * @private\n   */\n  PSVPanel.prototype._resize = function(evt) {\n    var x = parseInt(evt.clientX);\n    var y = parseInt(evt.clientY);\n\n    this.container.style.width = (this.container.offsetWidth - (x - this.prop.mouse_x)) + 'px';\n\n    this.prop.mouse_x = x;\n    this.prop.mouse_y = y;\n  };\n\n  return PSVPanel;\n\n});\n"]}
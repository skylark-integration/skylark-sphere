{"version":3,"sources":["components/PSVNavBarCaption.js"],"names":["define","PhotoSphereViewer","PSVNavBarCaptionButton","PSVUtils","PSVComponent","PSVNavBarCaption","navbar","caption","call","this","content","button","prop","width","create","setCaption","prototype","Object","constructor","className","publicMethods","hide","document","createElement","container","appendChild","window","addEventListener","destroy","removeEventListener","handleEvent","e","type","_onResize","html","innerHTML","style","display","offsetWidth","parseInt","getStyle","show"],"mappings":";;;;;;;AAAAA,QACE,eACA,2BACA,cACA,kBACA,SACAC,EACAC,EACAC,EACAC,GAEA,aASA,SAASC,EAAiBC,EAAQC,GAChCH,EAAaI,KAAKC,KAAMH,GAOxBG,KAAKC,QAAU,KAOfD,KAAKE,OAAS,KAMdF,KAAKG,MACHL,QAAS,GACTM,MAAO,GAGTJ,KAAKK,SAELL,KAAKM,WAAWR,GAsFlB,OAnFAF,EAAiBW,UAAYC,OAAOH,OAAOV,EAAaY,WACxDX,EAAiBW,UAAUE,YAAcb,EAEzCA,EAAiBc,UAAY,cAC7Bd,EAAiBe,eAAiB,cAKlCf,EAAiBW,UAAUF,OAAS,WAClCV,EAAaY,UAAUF,OAAON,KAAKC,MAEnCA,KAAKE,OAAS,IAAIT,EAAuBO,MACzCA,KAAKE,OAAOU,OAEZZ,KAAKC,QAAUY,SAASC,cAAc,OACtCd,KAAKC,QAAQS,UAAY,sBACzBV,KAAKe,UAAUC,YAAYhB,KAAKC,SAEhCgB,OAAOC,iBAAiB,SAAUlB,OAMpCJ,EAAiBW,UAAUY,QAAU,WACnCF,OAAOG,oBAAoB,SAAUpB,aAE9BA,KAAKC,QAEZN,EAAaY,UAAUY,QAAQpB,KAAKC,OAQtCJ,EAAiBW,UAAUc,YAAc,SAASC,GAChD,OAAQA,EAAEC,MAER,IAAK,SAAUvB,KAAKwB,cASxB5B,EAAiBW,UAAUD,WAAa,SAASmB,GAK7CzB,KAAKG,KAAKL,QAJP2B,GACiB,GAMtBzB,KAAKC,QAAQyB,UAAY1B,KAAKG,KAAKL,QAEnCE,KAAKC,QAAQ0B,MAAMC,QAAU,GAC7B5B,KAAKG,KAAKC,MAAQJ,KAAKC,QAAQ4B,YAE/B7B,KAAKwB,aAOP5B,EAAiBW,UAAUiB,UAAY,WACzBM,SAASpC,EAASqC,SAAS/B,KAAKe,UAAW,WAE1Cf,KAAKG,KAAKC,OACrBJ,KAAKE,OAAOU,OACZZ,KAAKC,QAAQ0B,MAAMC,QAAU,KAG7B5B,KAAKE,OAAO8B,OACZhC,KAAKC,QAAQ0B,MAAMC,QAAU,SAI1BhC","file":"../../components/PSVNavBarCaption.js","sourcesContent":["define([\n  \"../_psv/ctoc\",\n  \"../buttons/CaptionButton\",\n  \"../PSVUtils\",\n  \"./PSVComponent\"\n],function(\n  PhotoSphereViewer,\n  PSVNavBarCaptionButton,\n  PSVUtils,\n  PSVComponent\n){\n  \"use strict\";\n  /**\n   * Navbar caption class\n   * @param {PSVNavBar} navbar\n   * @param {string} caption\n   * @constructor\n   * @extends module:components.PSVComponent\n   * @memberof module:components\n   */\n  function PSVNavBarCaption(navbar, caption) {\n    PSVComponent.call(this, navbar);\n\n    /**\n     * @member {HTMLElement}\n     * @readonly\n     * @private\n     */\n    this.content = null;\n\n    /**\n     * @member {PSVNavBarCaptionButton}\n     * @readonly\n     * @private\n     */\n    this.button = null;\n\n    /**\n     * @member {Object}\n     * @private\n     */\n    this.prop = {\n      caption: '',\n      width: 0\n    };\n\n    this.create();\n\n    this.setCaption(caption);\n  }\n\n  PSVNavBarCaption.prototype = Object.create(PSVComponent.prototype);\n  PSVNavBarCaption.prototype.constructor = PSVNavBarCaption;\n\n  PSVNavBarCaption.className = 'psv-caption';\n  PSVNavBarCaption.publicMethods = ['setCaption'];\n\n  /**\n   * @override\n   */\n  PSVNavBarCaption.prototype.create = function() {\n    PSVComponent.prototype.create.call(this);\n\n    this.button = new PSVNavBarCaptionButton(this);\n    this.button.hide();\n\n    this.content = document.createElement('div');\n    this.content.className = 'psv-caption-content';\n    this.container.appendChild(this.content);\n\n    window.addEventListener('resize', this);\n  };\n\n  /**\n   * @override\n   */\n  PSVNavBarCaption.prototype.destroy = function() {\n    window.removeEventListener('resize', this);\n\n    delete this.content;\n\n    PSVComponent.prototype.destroy.call(this);\n  };\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  PSVNavBarCaption.prototype.handleEvent = function(e) {\n    switch (e.type) {\n      // @formatter:off\n      case 'resize': this._onResize(); break;\n      // @formatter:on\n    }\n  };\n\n  /**\n   * @summary Sets the bar caption\n   * @param {string} html\n   */\n  PSVNavBarCaption.prototype.setCaption = function(html) {\n    if (!html) {\n      this.prop.caption = '';\n    }\n    else {\n      this.prop.caption = html;\n    }\n\n    this.content.innerHTML = this.prop.caption;\n\n    this.content.style.display = '';\n    this.prop.width = this.content.offsetWidth;\n\n    this._onResize();\n  };\n\n  /**\n   * @summary Toggles content and icon deending on available space\n   * @private\n   */\n  PSVNavBarCaption.prototype._onResize = function() {\n    var width = parseInt(PSVUtils.getStyle(this.container, 'width')); // get real inner width\n\n    if (width >= this.prop.width) {\n      this.button.hide();\n      this.content.style.display = '';\n    }\n    else {\n      this.button.show();\n      this.content.style.display = 'none';\n    }\n  };\n\n  return PSVNavBarCaption;\n});\n  \n"]}
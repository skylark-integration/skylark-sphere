{"version":3,"sources":["components/PSVNotification.js"],"names":["define","PhotoSphereViewer","PSVUtils","PSVComponent","PSVNotification","psv","call","this","create","prototype","Object","constructor","className","publicMethods","content","document","createElement","container","appendChild","addEventListener","hideNotification","bind","destroy","isNotificationVisible","classList","contains","showNotification","config","innerHTML","add","trigger","timeout","setTimeout","remove"],"mappings":";;;;;;;AAAAA,QACE,eACA,cACA,kBACA,SACAC,EACAC,EACAC,GAEA,aAQA,SAASC,EAAgBC,GACvBF,EAAaG,KAAKC,KAAMF,GAExBE,KAAKC,SA2FP,OAxFAJ,EAAgBK,UAAYC,OAAOF,OAAOL,EAAaM,WACvDL,EAAgBK,UAAUE,YAAcP,EAExCA,EAAgBQ,UAAY,mBAC5BR,EAAgBS,eAAiB,mBAAoB,mBAAoB,yBAKzET,EAAgBK,UAAUD,OAAS,WACjCL,EAAaM,UAAUD,OAAOF,KAAKC,MAEnCA,KAAKO,QAAUC,SAASC,cAAc,OACtCT,KAAKO,QAAQF,UAAY,2BAEzBL,KAAKU,UAAUC,YAAYX,KAAKO,SAEhCP,KAAKO,QAAQK,iBAAiB,QAASZ,KAAKa,iBAAiBC,KAAKd,QAMpEH,EAAgBK,UAAUa,QAAU,kBAC3Bf,KAAKO,QAEZX,EAAaM,UAAUa,QAAQhB,KAAKC,OAOtCH,EAAgBK,UAAUc,sBAAwB,WAChD,OAAOhB,KAAKU,UAAUO,UAAUC,SAAS,8BAa3CrB,EAAgBK,UAAUiB,iBAAmB,SAASC,GAC9B,iBAAXA,IACTA,GACEb,QAASa,IAIbpB,KAAKO,QAAQc,UAAYD,EAAOb,QAEhCP,KAAKU,UAAUO,UAAUK,IAAI,6BAO7BtB,KAAKF,IAAIyB,QAAQ,qBAEbH,EAAOI,SACTC,WAAWzB,KAAKa,iBAAiBC,KAAKd,MAAOoB,EAAOI,UAQxD3B,EAAgBK,UAAUW,iBAAmB,WACvCb,KAAKgB,0BACPhB,KAAKU,UAAUO,UAAUS,OAAO,6BAOhC1B,KAAKF,IAAIyB,QAAQ,uBAKd1B","file":"../../components/PSVNotification.js","sourcesContent":["define([\n  \"../_psv/ctoc\",\n  \"../PSVUtils\",\n  \"./PSVComponent\"\n],function(\n  PhotoSphereViewer,\n  PSVUtils,\n  PSVComponent\n){\n  \"use strict\";\n  /**\n   * Notification class\n   * @param {PhotoSphereViewer} psv\n   * @constructor\n   * @extends module:components.PSVComponent\n   * @memberof module:components\n   */\n  function PSVNotification(psv) {\n    PSVComponent.call(this, psv);\n\n    this.create();\n  }\n\n  PSVNotification.prototype = Object.create(PSVComponent.prototype);\n  PSVNotification.prototype.constructor = PSVNotification;\n\n  PSVNotification.className = 'psv-notification';\n  PSVNotification.publicMethods = ['showNotification', 'hideNotification', 'isNotificationVisible'];\n\n  /**\n   * @override\n   */\n  PSVNotification.prototype.create = function() {\n    PSVComponent.prototype.create.call(this);\n\n    this.content = document.createElement('div');\n    this.content.className = 'psv-notification-content';\n\n    this.container.appendChild(this.content);\n\n    this.content.addEventListener('click', this.hideNotification.bind(this));\n  };\n\n  /**\n   * @override\n   */\n  PSVNotification.prototype.destroy = function() {\n    delete this.content;\n\n    PSVComponent.prototype.destroy.call(this);\n  };\n\n  /**\n   * @summary Checks if the notification is visible\n   * @returns {boolean}\n   */\n  PSVNotification.prototype.isNotificationVisible = function() {\n    return this.container.classList.contains('psv-notification--visible');\n  };\n\n  /**\n   * @summary Displays a notification on the viewer\n   * @param {Object|string} config\n   * @param {string} config.content\n   * @param {int} [config.timeout]\n   *\n   * @example\n   * viewer.showNotification({ content: 'Hello world', timeout: 5000})\n   * viewer.showNotification('Hello world')\n   */\n  PSVNotification.prototype.showNotification = function(config) {\n    if (typeof config === 'string') {\n      config = {\n        content: config\n      };\n    }\n\n    this.content.innerHTML = config.content;\n\n    this.container.classList.add('psv-notification--visible');\n\n    /**\n     * @event show-notification\n     * @memberof module:components.PSVNotification\n     * @summary Trigered when the notification is shown\n     */\n    this.psv.trigger('show-notification');\n\n    if (config.timeout) {\n      setTimeout(this.hideNotification.bind(this), config.timeout);\n    }\n  };\n\n  /**\n   * @summary Hides the notification\n   * @fires module:components.PSVNotification.hide-notification\n   */\n  PSVNotification.prototype.hideNotification = function() {\n    if (this.isNotificationVisible()) {\n      this.container.classList.remove('psv-notification--visible');\n\n      /**\n       * @event hide-notification\n       * @memberof module:components.PSVNotification\n       * @summary Trigered when the notification is hidden\n       */\n      this.psv.trigger('hide-notification');\n    }\n  };\n\n\n  return PSVNotification;\n\n});\n  "]}
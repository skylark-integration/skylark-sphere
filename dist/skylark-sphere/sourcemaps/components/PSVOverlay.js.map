{"version":3,"sources":["components/PSVOverlay.js"],"names":["define","PhotoSphereViewer","PSVUtils","PSVComponent","PSVOverlay","psv","call","this","create","hide","prototype","Object","constructor","className","publicMethods","image","document","createElement","container","appendChild","text","subtext","addEventListener","hideOverlay","bind","destroy","isOverlayVisible","visible","showOverlay","config","innerHTML","show","trigger"],"mappings":";;;;;;;AAAAA,QACE,eACA,cACA,kBACA,SACAC,EACAC,EACAC,GAEA,aAQA,SAASC,EAAWC,GAClBF,EAAaG,KAAKC,KAAMF,GAExBE,KAAKC,SACLD,KAAKE,OAqGP,OAlGAL,EAAWM,UAAYC,OAAOH,OAAOL,EAAaO,WAClDN,EAAWM,UAAUE,YAAcR,EAEnCA,EAAWS,UAAY,cACvBT,EAAWU,eAAiB,cAAe,cAAe,oBAK1DV,EAAWM,UAAUF,OAAS,WAC5BL,EAAaO,UAAUF,OAAOF,KAAKC,MAEnCA,KAAKQ,MAAQC,SAASC,cAAc,OACpCV,KAAKQ,MAAMF,UAAY,oBACvBN,KAAKW,UAAUC,YAAYZ,KAAKQ,OAEhCR,KAAKa,KAAOJ,SAASC,cAAc,OACnCV,KAAKa,KAAKP,UAAY,mBACtBN,KAAKW,UAAUC,YAAYZ,KAAKa,MAEhCb,KAAKc,QAAUL,SAASC,cAAc,OACtCV,KAAKc,QAAQR,UAAY,sBACzBN,KAAKW,UAAUC,YAAYZ,KAAKc,SAEhCd,KAAKW,UAAUI,iBAAiB,QAASf,KAAKgB,YAAYC,KAAKjB,QAMjEH,EAAWM,UAAUe,QAAU,kBACtBlB,KAAKQ,aACLR,KAAKa,YACLb,KAAKc,QAEZlB,EAAaO,UAAUe,QAAQnB,KAAKC,OAOtCH,EAAWM,UAAUgB,iBAAmB,WACtC,OAAOnB,KAAKoB,SAiBdvB,EAAWM,UAAUkB,YAAc,SAASC,GACpB,iBAAXA,IACTA,GACET,KAAMS,IAIVtB,KAAKQ,MAAMe,UAAYD,EAAOd,OAAS,GACvCR,KAAKa,KAAKU,UAAYD,EAAOT,MAAQ,GACrCb,KAAKc,QAAQS,UAAYD,EAAOR,SAAW,GAE3Cd,KAAKwB,OAOLxB,KAAKF,IAAI2B,QAAQ,iBAOnB5B,EAAWM,UAAUa,YAAc,WAC7BhB,KAAKmB,qBACPnB,KAAKE,OAOLF,KAAKF,IAAI2B,QAAQ,kBAId5B","file":"../../components/PSVOverlay.js","sourcesContent":["define([\n  \"../_psv/ctoc\",\n  \"../PSVUtils\",\n  \"./PSVComponent\"\n],function(\n  PhotoSphereViewer,\n  PSVUtils,\n  PSVComponent\n){\n  \"use strict\";\n  /**\n   * Overlay class\n   * @param {PhotoSphereViewer} psv\n   * @constructor\n   * @extends module:components.PSVComponent\n   * @memberof module:components\n   */\n  function PSVOverlay(psv) {\n    PSVComponent.call(this, psv);\n\n    this.create();\n    this.hide();\n  }\n\n  PSVOverlay.prototype = Object.create(PSVComponent.prototype);\n  PSVOverlay.prototype.constructor = PSVOverlay;\n\n  PSVOverlay.className = 'psv-overlay';\n  PSVOverlay.publicMethods = ['showOverlay', 'hideOverlay', 'isOverlayVisible'];\n\n  /**\n   * @override\n   */\n  PSVOverlay.prototype.create = function() {\n    PSVComponent.prototype.create.call(this);\n\n    this.image = document.createElement('div');\n    this.image.className = 'psv-overlay-image';\n    this.container.appendChild(this.image);\n\n    this.text = document.createElement('div');\n    this.text.className = 'psv-overlay-text';\n    this.container.appendChild(this.text);\n\n    this.subtext = document.createElement('div');\n    this.subtext.className = 'psv-overlay-subtext';\n    this.container.appendChild(this.subtext);\n\n    this.container.addEventListener('click', this.hideOverlay.bind(this));\n  };\n\n  /**\n   * @override\n   */\n  PSVOverlay.prototype.destroy = function() {\n    delete this.image;\n    delete this.text;\n    delete this.subtext;\n\n    PSVComponent.prototype.destroy.call(this);\n  };\n\n  /**\n   * @summary Checks if the overlay is visible\n   * @returns {boolean}\n   */\n  PSVOverlay.prototype.isOverlayVisible = function() {\n    return this.visible;\n  };\n\n  /**\n   * @summary Displays an overlay on the viewer\n   * @param {Object|string} config\n   * @param {string} config.image\n   * @param {string} config.text\n   * @param {string} config.subtext\n   *\n   * @example\n   * viewer.showOverlay({\n   *   image: '<svg></svg>',\n   *   text: '....',\n   *   subtext: '....'\n   * })\n   */\n  PSVOverlay.prototype.showOverlay = function(config) {\n    if (typeof config === 'string') {\n      config = {\n        text: config\n      };\n    }\n\n    this.image.innerHTML = config.image || '';\n    this.text.innerHTML = config.text || '';\n    this.subtext.innerHTML = config.subtext || '';\n\n    this.show();\n\n    /**\n     * @event show-overlay\n     * @memberof module:components.PSVOverlay\n     * @summary Trigered when the overlay is shown\n     */\n    this.psv.trigger('show-overlay');\n  };\n\n  /**\n   * @summary Hides the notification\n   * @fires module:components.PSVOverlay.hide-notification\n   */\n  PSVOverlay.prototype.hideOverlay = function() {\n    if (this.isOverlayVisible()) {\n      this.hide();\n\n      /**\n       * @event hide-overlay\n       * @memberof module:components.PSVOverlay\n       * @summary Trigered when the overlay is hidden\n       */\n      this.psv.trigger('hide-overlay');\n    }\n  };\n\n  return PSVOverlay;\n });\n "]}
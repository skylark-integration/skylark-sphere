{"version":3,"sources":["components/PSVLoader.js"],"names":["define","PhotoSphereViewer","PSVUtils","PSVComponent","PSVLoader","psv","call","this","canvas","loader","create","prototype","Object","constructor","className","inner","pixelRatio","SYSTEM","document","createElement","container","appendChild","width","clientWidth","height","tickness","offsetWidth","config","loading_img","src","loading_txt","innerHTML","a","Math","round","sqrt","pow","style","maxWidth","maxHeight","destroy","setProgress","value","context","getContext","clearRect","lineWidth","strokeStyle","getStyle","beginPath","arc","PI","stroke"],"mappings":";;;;;;;AAAAA,QACE,eACA,cACA,kBACA,SACAC,EACAC,EACAC,GAEA,aAQA,SAASC,EAAUC,GACjBF,EAAaG,KAAKC,KAAMF,GAQxBE,KAAKC,OAAS,KAQdD,KAAKE,OAAS,KAEdF,KAAKG,SA+EP,OA5EAN,EAAUO,UAAYC,OAAOF,OAAOP,EAAaQ,WACjDP,EAAUO,UAAUE,YAAcT,EAElCA,EAAUU,UAAY,uBAKtBV,EAAUO,UAAUD,OAAS,WAC3BP,EAAaQ,UAAUD,OAAOJ,KAAKC,MAEnC,IAeIQ,EAfAC,EAAaf,EAAkBgB,OAAOD,WA0B1C,GAxBAT,KAAKE,OAASS,SAASC,cAAc,OACrCZ,KAAKE,OAAOK,UAAY,aACxBP,KAAKa,UAAUC,YAAYd,KAAKE,QAEhCF,KAAKC,OAASU,SAASC,cAAc,UACrCZ,KAAKC,OAAOM,UAAY,oBAExBP,KAAKC,OAAOc,MAAQf,KAAKE,OAAOc,YAAcP,EAC9CT,KAAKC,OAAOgB,OAASjB,KAAKE,OAAOc,YAAcP,EAC/CT,KAAKE,OAAOY,YAAYd,KAAKC,QAE7BD,KAAKkB,UAAYlB,KAAKE,OAAOiB,YAAcnB,KAAKE,OAAOc,aAAe,EAAIP,EAGtET,KAAKF,IAAIsB,OAAOC,cAClBb,EAAQG,SAASC,cAAc,QACzBL,UAAY,mBAClBC,EAAMc,IAAMtB,KAAKF,IAAIsB,OAAOC,aAErBrB,KAAKF,IAAIsB,OAAOG,eACvBf,EAAQG,SAASC,cAAc,QACzBL,UAAY,kBAClBC,EAAMgB,UAAYxB,KAAKF,IAAIsB,OAAOG,aAEhCf,EAAO,CACT,IAAIiB,EAAIC,KAAKC,MAAMD,KAAKE,KAAK,EAAIF,KAAKG,KAAK7B,KAAKC,OAAOc,MAAQ,EAAIf,KAAKkB,SAAW,GAAKT,EAAY,KACpGD,EAAMsB,MAAMC,SAAWN,EAAI,KAC3BjB,EAAMsB,MAAME,UAAYP,EAAI,KAC5BzB,KAAKE,OAAOY,YAAYN,KAO5BX,EAAUO,UAAU6B,QAAU,kBACrBjC,KAAKE,cACLF,KAAKC,OAEZL,EAAaQ,UAAU6B,QAAQlC,KAAKC,OAOtCH,EAAUO,UAAU8B,YAAc,SAASC,GACzC,IAAIC,EAAUpC,KAAKC,OAAOoC,WAAW,MAErCD,EAAQE,UAAU,EAAG,EAAGtC,KAAKC,OAAOc,MAAOf,KAAKC,OAAOgB,QAEvDmB,EAAQG,UAAYvC,KAAKkB,SACzBkB,EAAQI,YAAc7C,EAAS8C,SAASzC,KAAKE,OAAQ,SAErDkC,EAAQM,YACRN,EAAQO,IACN3C,KAAKC,OAAOc,MAAQ,EAAGf,KAAKC,OAAOgB,OAAS,EAC5CjB,KAAKC,OAAOc,MAAQ,EAAIf,KAAKkB,SAAW,GACvCQ,KAAKkB,GAAK,EAAGT,EAAQ,IAAM,EAAIT,KAAKkB,GAAKlB,KAAKkB,GAAK,GAEtDR,EAAQS,UAGHhD","file":"../../components/PSVLoader.js","sourcesContent":["define([\n  \"../_psv/ctoc\",\n  \"../PSVUtils\",\n  \"./PSVComponent\"\n],function(\n  PhotoSphereViewer,\n  PSVUtils,\n  PSVComponent\n){\n  \"use strict\";\n  /**\n   * Loader class\n   * @param {PhotoSphereViewer} psv\n   * @constructor\n   * @extends module:components.PSVComponent\n   * @memberof module:components\n   */\n  function PSVLoader(psv) {\n    PSVComponent.call(this, psv);\n\n    /**\n     * @summary Animation canvas\n     * @member {HTMLCanvasElement}\n     * @readonly\n     * @private\n     */\n    this.canvas = null;\n\n    /**\n     * @summary Inner container for vertical center\n     * @member {HTMLElement}\n     * @readonly\n     * @private\n     */\n    this.loader = null;\n\n    this.create();\n  }\n\n  PSVLoader.prototype = Object.create(PSVComponent.prototype);\n  PSVLoader.prototype.constructor = PSVLoader;\n\n  PSVLoader.className = 'psv-loader-container';\n\n  /**\n   * @override\n   */\n  PSVLoader.prototype.create = function() {\n    PSVComponent.prototype.create.call(this);\n\n    var pixelRatio = PhotoSphereViewer.SYSTEM.pixelRatio;\n\n    this.loader = document.createElement('div');\n    this.loader.className = 'psv-loader';\n    this.container.appendChild(this.loader);\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.className = 'psv-loader-canvas';\n\n    this.canvas.width = this.loader.clientWidth * pixelRatio;\n    this.canvas.height = this.loader.clientWidth * pixelRatio;\n    this.loader.appendChild(this.canvas);\n\n    this.tickness = (this.loader.offsetWidth - this.loader.clientWidth) / 2 * pixelRatio;\n\n    var inner;\n    if (this.psv.config.loading_img) {\n      inner = document.createElement('img');\n      inner.className = 'psv-loader-image';\n      inner.src = this.psv.config.loading_img;\n    }\n    else if (this.psv.config.loading_txt) {\n      inner = document.createElement('div');\n      inner.className = 'psv-loader-text';\n      inner.innerHTML = this.psv.config.loading_txt;\n    }\n    if (inner) {\n      var a = Math.round(Math.sqrt(2 * Math.pow((this.canvas.width / 2 - this.tickness / 2) / pixelRatio, 2)));\n      inner.style.maxWidth = a + 'px';\n      inner.style.maxHeight = a + 'px';\n      this.loader.appendChild(inner);\n    }\n  };\n\n  /**\n   * @override\n   */\n  PSVLoader.prototype.destroy = function() {\n    delete this.loader;\n    delete this.canvas;\n\n    PSVComponent.prototype.destroy.call(this);\n  };\n\n  /**\n   * @summary Sets the loader progression\n   * @param {int} value - from 0 to 100\n   */\n  PSVLoader.prototype.setProgress = function(value) {\n    var context = this.canvas.getContext('2d');\n\n    context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    context.lineWidth = this.tickness;\n    context.strokeStyle = PSVUtils.getStyle(this.loader, 'color');\n\n    context.beginPath();\n    context.arc(\n      this.canvas.width / 2, this.canvas.height / 2,\n      this.canvas.width / 2 - this.tickness / 2,\n      -Math.PI / 2, value / 100 * 2 * Math.PI - Math.PI / 2\n    );\n    context.stroke();\n  };\n\n  return PSVLoader;\n});\n\n"]}
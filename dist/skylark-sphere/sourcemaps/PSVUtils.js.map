{"version":3,"sources":["PSVUtils.js"],"names":["define","THREE","DeviceOrientationControls","StereoEffect","PhotoSphereViewer","PSVUtils","Utils","TwoPI","Math","PI","HalfPI","svgNS","checkTHREE","components","i","l","arguments","length","isCanvasSupported","canvas","document","createElement","getContext","getWebGLCtx","context","some","name","getParameter","e","isWebGLSupported","window","WebGLRenderingContext","isDeviceOrientationSupported","Promise","resolve","listener","alpha","isNaN","removeEventListener","addEventListener","setTimeout","isTouchEnabled","getMaxTextureWidth","ctx","MAX_TEXTURE_SIZE","toggleClass","element","className","active","classList","undefined","toggle","contains","add","remove","currentClassName","getAttribute","currentActive","indexOf","regex","RegExp","replace","setAttribute","addClasses","split","forEach","removeClasses","hasParent","el","parent","parentNode","getClosest","selector","matches","msMatchesSelector","bind","SVGElement","parentElement","mouseWheelEvent","onmousewheel","getEventKey","evt","key","KEYMAP","keyCode","which","MS_KEYMAP","13","27","32","33","34","37","38","39","40","46","107","109","Add","Del","Down","Esc","Left","Right","Spacebar","Subtract","Up","fullscreenEvent","map","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","exit","hasOwnProperty","bound","x","min","max","isInteger","Number","value","isFinite","floor","sum","array","reduce","a","b","dasherize","str","s","toLowerCase","getXMPValue","data","attr","result","match","isFullscreenEnabled","elt","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","call","getStyle","prop","getComputedStyle","getShortestArc","from","to","candidate","abs","Infinity","getAngle","position1","position2","acos","cos","latitude","longitude","sin","parsePosition","top","left","tokens","toLocaleLowerCase","slice","positions","xFirst","token","reverse","parsed","join","bottom","right","center","parseSpeed","speed","toString","trim","speed_value","parseFloat","speed_unit","degToRad","PSVError","parseAngle","angle","zeroCenter","halfCircle","unit","cleanTHREEScene","scene","children","item","Mesh","geometry","dispose","material","materials","throttle","func","wait","self","args","timeout","previous","later","Date","now","apply","remaining","this","clearTimeout","isPlainObject","obj","Object","getPrototypeOf","proto","prototype","deepmerge","target","src","first","merge","Array","isArray","keys","clone","normalizeWheel","event","sX","sY","pX","pY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","object","callback"],"mappings":"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","file":"../PSVUtils.js","sourcesContent":["define([\n  \"skylark-threejs\",\n  \"skylark-threejs-ex/controls/DeviceOrientationControls\",\n  \"skylark-threejs-ex/effects/StereoEffect\",\n  \"./_psv/ctoc\"\n],function(\n  THREE,\n  DeviceOrientationControls,\n  StereoEffect,\n  PhotoSphereViewer\n){\n  \"use strict\";\n  THREE.DeviceOrientationControls = DeviceOrientationControls;\n  THREE.StereoEffect = StereoEffect;\n\n  /**\n   * Static utilities for PSV\n   * @namespace\n   */\n  var PSVUtils = {};\n\n  /**\n   * @summary exposes {@link PSVUtils}\n   * @member {object}\n   * @memberof PhotoSphereViewer\n   * @readonly\n   */\n  PhotoSphereViewer.Utils = PSVUtils;\n\n  /**\n   * @summary Short-Hand for PI*2\n   * @type {float}\n   * @readonly\n   */\n  PSVUtils.TwoPI = Math.PI * 2.0;\n\n  /**\n   * @summary Short-Hand for PI/2\n   * @type {float}\n   * @readonly\n   */\n  PSVUtils.HalfPI = Math.PI / 2.0;\n\n  /**\n   * @summary Namespace for SVG creation\n   * @type {string}\n   * @readonly\n   */\n  PSVUtils.svgNS = 'http://www.w3.org/2000/svg';\n\n  /**\n   * @summary Checks if some three.js components are loaded\n   * @param {...string} components\n   * @returns {boolean}\n   */\n  PSVUtils.checkTHREE = function(components) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      if (!(arguments[i] in THREE)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * @summary Detects if canvas is supported\n   * @returns {boolean}\n   */\n  PSVUtils.isCanvasSupported = function() {\n    var canvas = document.createElement('canvas');\n    return !!(canvas.getContext && canvas.getContext('2d'));\n  };\n\n  /**\n   * @summary Tries to return a canvas webgl context\n   * @returns {WebGLRenderingContext}\n   */\n  PSVUtils.getWebGLCtx = function() {\n    var canvas = document.createElement('canvas');\n    var names = ['webgl', 'experimental-webgl', 'moz-webgl', 'webkit-3d'];\n    var context = null;\n\n    if (!canvas.getContext) {\n      return null;\n    }\n\n    if (names.some(function(name) {\n        try {\n          context = canvas.getContext(name);\n          return (context && typeof context.getParameter === 'function');\n        } catch (e) {\n          return false;\n        }\n      })) {\n      return context;\n    }\n    else {\n      return null;\n    }\n  };\n\n  /**\n   * @summary Detects if WebGL is supported\n   * @returns {boolean}\n   */\n  PSVUtils.isWebGLSupported = function() {\n    return !!window.WebGLRenderingContext && PSVUtils.getWebGLCtx() !== null;\n  };\n\n  /**\n   * @summary Detects if device orientation is supported\n   * @description We can only be sure device orientation is supported once received an event with coherent data\n   * @returns {Promise<boolean>}\n   */\n  PSVUtils.isDeviceOrientationSupported = function() {\n    return new Promise(function(resolve) {\n      if ('DeviceOrientationEvent' in window) {\n        var listener = function(e) {\n          if (e && e.alpha !== null && !isNaN(e.alpha)) {\n            resolve(true);\n          }\n          else {\n            resolve(false);\n          }\n\n          window.removeEventListener('deviceorientation', listener);\n        };\n\n        window.addEventListener('deviceorientation', listener, false);\n\n        // after 2 secs, auto-reject the promise\n        setTimeout(listener, 2000);\n      }\n      else {\n        resolve(false);\n      }\n    });\n  };\n\n  /**\n   * @summary Detects if the user is using a touch screen\n   * @returns {Promise<boolean>}\n   */\n  PSVUtils.isTouchEnabled = function() {\n    return new Promise(function(resolve) {\n      var listener = function(e) {\n        if (e) {\n          resolve(true);\n        }\n        else {\n          resolve(false);\n        }\n\n        window.removeEventListener('touchstart', listener);\n      };\n\n      window.addEventListener('touchstart', listener, false);\n\n      // after 10 secs auto-reject the promise\n      setTimeout(listener, 10000);\n    });\n  };\n\n  /**\n   * @summary Gets max texture width in WebGL context\n   * @returns {int}\n   */\n  PSVUtils.getMaxTextureWidth = function() {\n    var ctx = PSVUtils.getWebGLCtx();\n    if (ctx !== null) {\n      return ctx.getParameter(ctx.MAX_TEXTURE_SIZE);\n    }\n    else {\n      return 0;\n    }\n  };\n\n  /**\n   * @summary Toggles a CSS class\n   * @param {HTMLElement|SVGElement} element\n   * @param {string} className\n   * @param {boolean} [active] - forced state\n   */\n  PSVUtils.toggleClass = function(element, className, active) {\n    // manual implementation for IE11 and SVGElement\n    if (!element.classList) {\n      var currentClassName = element.getAttribute('class') || '';\n      var currentActive = currentClassName.indexOf(className) !== -1;\n      var regex = new RegExp('(?:^|\\\\s)' + className + '(?:\\\\s|$)');\n\n      if ((active === undefined || active) && !currentActive) {\n        currentClassName += currentClassName.length > 0 ? ' ' + className : className;\n      }\n      else if (!active) {\n        currentClassName = currentClassName.replace(regex, ' ');\n      }\n\n      element.setAttribute('class', currentClassName);\n    }\n    else {\n      if (active === undefined) {\n        element.classList.toggle(className);\n      }\n      else if (active && !element.classList.contains(className)) {\n        element.classList.add(className);\n      }\n      else if (!active) {\n        element.classList.remove(className);\n      }\n    }\n  };\n\n  /**\n   * @summary Adds one or several CSS classes to an element\n   * @param {HTMLElement} element\n   * @param {string} className\n   */\n  PSVUtils.addClasses = function(element, className) {\n    if (!className) {\n      return;\n    }\n    className.split(' ').forEach(function(name) {\n      PSVUtils.toggleClass(element, name, true);\n    });\n  };\n\n  /**\n   * @summary Removes one or several CSS classes to an element\n   * @param {HTMLElement} element\n   * @param {string} className\n   */\n  PSVUtils.removeClasses = function(element, className) {\n    if (!className) {\n      return;\n    }\n    className.split(' ').forEach(function(name) {\n      PSVUtils.toggleClass(element, name, false);\n    });\n  };\n\n  /**\n   * @summary Searches if an element has a particular parent at any level including itself\n   * @param {HTMLElement} el\n   * @param {HTMLElement} parent\n   * @returns {boolean}\n   */\n  PSVUtils.hasParent = function(el, parent) {\n    do {\n      if (el === parent) {\n        return true;\n      }\n    } while (!!(el = el.parentNode));\n\n    return false;\n  };\n\n  /**\n   * @summary Gets the closest parent (can by itself)\n   * @param {HTMLElement|SVGElement} el\n   * @param {string} selector\n   * @returns {HTMLElement}\n   */\n  PSVUtils.getClosest = function(el, selector) {\n    var matches = el.matches || el.msMatchesSelector;\n\n    do {\n      if (matches.bind(el)(selector)) {\n        return el;\n      }\n    } while (!!(el instanceof SVGElement ? el = el.parentNode : el = el.parentElement));\n\n    return null;\n  };\n\n  /**\n   * @summary Gets the event name for mouse wheel\n   * @returns {string}\n   */\n  PSVUtils.mouseWheelEvent = function() {\n    return 'onwheel' in document.createElement('div') ? 'wheel' : // Modern browsers support \"wheel\"\n      document.onmousewheel !== undefined ? 'mousewheel' : // Webkit and IE support at least \"mousewheel\"\n        'DOMMouseScroll'; // let's assume that remaining browsers are older Firefox\n  };\n\n  /**\n   * @summary Returns the key name of a KeyboardEvent\n   * @param {KeyboardEvent} evt\n   * @returns {string}\n   */\n  PSVUtils.getEventKey = function(evt) {\n    var key = evt.key || PSVUtils.getEventKey.KEYMAP[evt.keyCode || evt.which];\n\n    if (key && PSVUtils.getEventKey.MS_KEYMAP[key]) {\n      key = PSVUtils.getEventKey.MS_KEYMAP[key];\n    }\n\n    return key;\n  };\n\n  /**\n   * @summary Map between keyboard events `keyCode|which` and `key`\n   * @type {Object.<int, string>}\n   * @readonly\n   * @protected\n   */\n  PSVUtils.getEventKey.KEYMAP = {\n    13: 'Enter',\n    27: 'Escape',\n    32: ' ',\n    33: 'PageUp',\n    34: 'PageDown',\n    37: 'ArrowLeft',\n    38: 'ArrowUp',\n    39: 'ArrowRight',\n    40: 'ArrowDown',\n    46: 'Delete',\n    107: '+',\n    109: '-'\n  };\n\n  /**\n   * @summary Map for non standard keyboard events `key` for IE and Edge\n   * @see https://github.com/shvaikalesh/shim-keyboard-event-key\n   * @type {Object.<string, string>}\n   * @readonly\n   * @protected\n   */\n  PSVUtils.getEventKey.MS_KEYMAP = {\n    Add: '+',\n    Del: 'Delete',\n    Down: 'ArrowDown',\n    Esc: 'Escape',\n    Left: 'ArrowLeft',\n    Right: 'ArrowRight',\n    Spacebar: ' ',\n    Subtract: '-',\n    Up: 'ArrowUp'\n  };\n\n  /**\n   * @summary  Gets the event name for fullscreen\n   * @returns {string}\n   */\n  PSVUtils.fullscreenEvent = function() {\n    var map = {\n      'exitFullscreen': 'fullscreenchange',\n      'webkitExitFullscreen': 'webkitfullscreenchange',\n      'mozCancelFullScreen': 'mozfullscreenchange',\n      'msExitFullscreen': 'MSFullscreenChange'\n    };\n\n    for (var exit in map) {\n      if (map.hasOwnProperty(exit) && exit in document) {\n        return map[exit];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * @summary Ensures that a number is in a given interval\n   * @param {number} x\n   * @param {number} min\n   * @param {number} max\n   * @returns {number}\n   */\n  PSVUtils.bound = function(x, min, max) {\n    return Math.max(min, Math.min(max, x));\n  };\n\n  /**\n   * @summary Checks if a value is an integer\n   * @function\n   * @param {*} value\n   * @returns {boolean}\n   */\n  PSVUtils.isInteger = Number.isInteger || function(value) {\n      return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n    };\n\n  /**\n   * @summary Computes the sum of an array\n   * @param {number[]} array\n   * @returns {number}\n   */\n  PSVUtils.sum = function(array) {\n    return array.reduce(function(a, b) {\n      return a + b;\n    }, 0);\n  };\n\n  /**\n   * @summary Transforms a string to dash-case\n   * {@link https://github.com/shahata/dasherize}\n   * @param {string} str\n   * @returns {string}\n   */\n  PSVUtils.dasherize = function(str) {\n    return str.replace(/[A-Z](?:(?=[^A-Z])|[A-Z]*(?=[A-Z][^A-Z]|$))/g, function(s, i) {\n      return (i > 0 ? '-' : '') + s.toLowerCase();\n    });\n  };\n\n  /**\n   * @summary Returns the value of a given attribute in the panorama metadata\n   * @param {string} data\n   * @param {string} attr\n   * @returns (string)\n   */\n  PSVUtils.getXMPValue = function(data, attr) {\n    var result;\n    // XMP data are stored in children\n    if ((result = data.match('<GPano:' + attr + '>(.*)</GPano:' + attr + '>')) !== null) {\n      return result[1];\n    }\n    // XMP data are stored in attributes\n    else if ((result = data.match('GPano:' + attr + '=\"(.*?)\"')) !== null) {\n      return result[1];\n    }\n    else {\n      return null;\n    }\n  };\n\n  /**\n   * @summary Detects if fullscreen is enabled\n   * @param {HTMLElement} elt\n   * @returns {boolean}\n   */\n  PSVUtils.isFullscreenEnabled = function(elt) {\n    return (document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement) === elt;\n  };\n\n  /**\n   * @summary Enters fullscreen mode\n   * @param {HTMLElement} elt\n   */\n  PSVUtils.requestFullscreen = function(elt) {\n    (elt.requestFullscreen || elt.mozRequestFullScreen || elt.webkitRequestFullscreen || elt.msRequestFullscreen).call(elt);\n  };\n\n  /**\n   * @summary Exits fullscreen mode\n   */\n  PSVUtils.exitFullscreen = function() {\n    (document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen || document.msExitFullscreen).call(document);\n  };\n\n  /**\n   * @summary Gets an element style\n   * @param {HTMLElement} elt\n   * @param {string} prop\n   * @returns {*}\n   */\n  PSVUtils.getStyle = function(elt, prop) {\n    return window.getComputedStyle(elt, null)[prop];\n  };\n\n  /**\n   * @summary Compute the shortest offset between two longitudes\n   * @param {float} from\n   * @param {float} to\n   * @returns {float}\n   */\n  PSVUtils.getShortestArc = function(from, to) {\n    var tCandidates = [\n      0, // direct\n      PSVUtils.TwoPI, // clock-wise cross zero\n      -PSVUtils.TwoPI // counter-clock-wise cross zero\n    ];\n\n    return tCandidates.reduce(function(value, candidate) {\n      candidate = to - from + candidate;\n      return Math.abs(candidate) < Math.abs(value) ? candidate : value;\n    }, Infinity);\n  };\n\n  /**\n   * @summary Computes the angle between the current position and a target position\n   * @param {PhotoSphereViewer.Position} position1\n   * @param {PhotoSphereViewer.Position} position2\n   * @returns {number}\n   */\n  PSVUtils.getAngle = function(position1, position2) {\n    return Math.acos(\n      Math.cos(position1.latitude) *\n      Math.cos(position2.latitude) *\n      Math.cos(position1.longitude - position2.longitude) +\n      Math.sin(position1.latitude) *\n      Math.sin(position2.latitude)\n    );\n  };\n\n  /**\n   * @summary Translate CSS values like \"top center\" or \"10% 50%\" as top and left positions\n   * @description The implementation is as close as possible to the \"background-position\" specification\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-position}\n   * @param {string} value\n   * @returns {{top: float, left: float}}\n   */\n  PSVUtils.parsePosition = function(value) {\n    if (!value) {\n      return { top: 0.5, left: 0.5 };\n    }\n\n    if (typeof value === 'object') {\n      return value;\n    }\n\n    var tokens = value.toLocaleLowerCase().split(' ').slice(0, 2);\n\n    if (tokens.length === 1) {\n      if (PSVUtils.parsePosition.positions[tokens[0]] !== undefined) {\n        tokens = [tokens[0], 'center'];\n      }\n      else {\n        tokens = [tokens[0], tokens[0]];\n      }\n    }\n\n    var xFirst = tokens[1] !== 'left' && tokens[1] !== 'right' && tokens[0] !== 'top' && tokens[0] !== 'bottom';\n\n    tokens = tokens.map(function(token) {\n      return PSVUtils.parsePosition.positions[token] || token;\n    });\n\n    if (!xFirst) {\n      tokens.reverse();\n    }\n\n    var parsed = tokens.join(' ').match(/^([0-9.]+)% ([0-9.]+)%$/);\n\n    if (parsed) {\n      return {\n        left: parsed[1] / 100,\n        top: parsed[2] / 100\n      };\n    }\n    else {\n      return { top: 0.5, left: 0.5 };\n    }\n  };\n\n  PSVUtils.parsePosition.positions = { 'top': '0%', 'bottom': '100%', 'left': '0%', 'right': '100%', 'center': '50%' };\n\n  /**\n   * @summary Parses an speed\n   * @param {string} speed - The speed, in radians/degrees/revolutions per second/minute\n   * @returns {float} radians per second\n   * @throws {PSVError} when the speed cannot be parsed\n   */\n  PSVUtils.parseSpeed = function(speed) {\n    if (typeof speed === 'string') {\n      speed = speed.toString().trim();\n\n      // Speed extraction\n      var speed_value = parseFloat(speed.replace(/^(-?[0-9]+(?:\\.[0-9]*)?).*$/, '$1'));\n      var speed_unit = speed.replace(/^-?[0-9]+(?:\\.[0-9]*)?(.*)$/, '$1').trim();\n\n      // \"per minute\" -> \"per second\"\n      if (speed_unit.match(/(pm|per minute)$/)) {\n        speed_value /= 60;\n      }\n\n      // Which unit?\n      switch (speed_unit) {\n        // Degrees per minute / second\n        case 'dpm':\n        case 'degrees per minute':\n        case 'dps':\n        case 'degrees per second':\n          speed = THREE.Math.degToRad(speed_value);\n          break;\n\n        // Radians per minute / second\n        case 'radians per minute':\n        case 'radians per second':\n          speed = speed_value;\n          break;\n\n        // Revolutions per minute / second\n        case 'rpm':\n        case 'revolutions per minute':\n        case 'rps':\n        case 'revolutions per second':\n          speed = speed_value * PSVUtils.TwoPI;\n          break;\n\n        // Unknown unit\n        default:\n          throw new PSVError('unknown speed unit \"' + speed_unit + '\"');\n      }\n    }\n\n    return speed;\n  };\n\n  /**\n   * @summary Parses an angle value in radians or degrees and returns a normalized value in radians\n   * @param {string|number} angle - eg: 3.14, 3.14rad, 180deg\n   * @param {boolean} [zeroCenter=false] - normalize between -Pi/2 - Pi/2 instead of 0 - 2*Pi\n   * @param {boolean} [halfCircle=zeroCenter] - normalize between -Pi - Pi instead of -Pi/2 - Pi/2\n   * @returns {float}\n   * @throws {PSVError} when the angle cannot be parsed\n   */\n  PSVUtils.parseAngle = function(angle, zeroCenter, halfCircle) {\n    if (halfCircle === undefined) {\n      halfCircle = zeroCenter;\n    }\n\n    if (typeof angle === 'string') {\n      var match = angle.toLowerCase().trim().match(/^(-?[0-9]+(?:\\.[0-9]*)?)(.*)$/);\n\n      if (!match) {\n        throw new PSVError('unknown angle \"' + angle + '\"');\n      }\n\n      var value = parseFloat(match[1]);\n      var unit = match[2];\n\n      if (unit) {\n        switch (unit) {\n          case 'deg':\n          case 'degs':\n            angle = THREE.Math.degToRad(value);\n            break;\n          case 'rad':\n          case 'rads':\n            angle = value;\n            break;\n          default:\n            throw new PSVError('unknown angle unit \"' + unit + '\"');\n        }\n      }\n      else {\n        angle = value;\n      }\n    }\n\n    angle = (zeroCenter ? angle + Math.PI : angle) % PSVUtils.TwoPI;\n\n    if (angle < 0) {\n      angle = PSVUtils.TwoPI + angle;\n    }\n\n    return zeroCenter ? PSVUtils.bound(angle - Math.PI, -Math.PI / (halfCircle ? 2 : 1), Math.PI / (halfCircle ? 2 : 1)) : angle;\n  };\n\n  /**\n   * @summary Removes all children of a three.js scene and dispose all textures\n   * @param {THREE.Scene} scene\n   */\n  PSVUtils.cleanTHREEScene = function(scene) {\n    scene.children.forEach(function(item) {\n      if (item instanceof THREE.Mesh) {\n        if (item.geometry) {\n          item.geometry.dispose();\n          item.geometry = null;\n        }\n\n        if (item.material) {\n          if (item.material.materials) {\n            item.material.materials.forEach(function(material) {\n              if (material.map) {\n                material.map.dispose();\n                material.map = null;\n              }\n\n              material.dispose();\n            });\n\n            item.material.materials.length = 0;\n          }\n          else {\n            if (item.material.map) {\n              item.material.map.dispose();\n              item.material.map = null;\n            }\n\n            item.material.dispose();\n          }\n\n          item.material = null;\n        }\n      }\n    });\n    scene.children.length = 0;\n  };\n\n  /**\n   * @summary Returns a function, that, when invoked, will only be triggered at most once during a given window of time.\n   * @copyright underscore.js - modified by Clément Prévost {@link http://stackoverflow.com/a/27078401}\n   * @param {Function} func\n   * @param {int} wait\n   * @returns {Function}\n   */\n  PSVUtils.throttle = function(func, wait) {\n    var self, args, result;\n    var timeout = null;\n    var previous = 0;\n    var later = function() {\n      previous = Date.now();\n      timeout = null;\n      result = func.apply(self, args);\n      if (!timeout) {\n        self = args = null;\n      }\n    };\n    return function() {\n      var now = Date.now();\n      if (!previous) {\n        previous = now;\n      }\n      var remaining = wait - (now - previous);\n      self = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(self, args);\n        if (!timeout) {\n          self = args = null;\n        }\n      }\n      else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  /**\n   * @summary Test if an object is a plain object\n   * @description Test if an object is a plain object, i.e. is constructed\n   * by the built-in Object constructor and inherits directly from Object.prototype\n   * or null. Some built-in objects pass the test, e.g. Math which is a plain object\n   * and some host or exotic objects may pass also.\n   * {@link http://stackoverflow.com/a/5878101/1207670}\n   * @param {*} obj\n   * @returns {boolean}\n   */\n  PSVUtils.isPlainObject = function(obj) {\n    // Basic check for Type object that's not null\n    if (typeof obj === 'object' && obj !== null) {\n      // If Object.getPrototypeOf supported, use it\n      if (typeof Object.getPrototypeOf === 'function') {\n        var proto = Object.getPrototypeOf(obj);\n        return proto === Object.prototype || proto === null;\n      }\n\n      // Otherwise, use internal class\n      // This should be reliable as if getPrototypeOf not supported, is pre-ES5\n      return Object.prototype.toString.call(obj) === '[object Object]';\n    }\n\n    // Not an object\n    return false;\n  };\n\n  /**\n   * @summary Merges the enumerable attributes of two objects\n   * @description Replaces arrays and alters the target object.\n   * @copyright Nicholas Fisher <nfisher110@gmail.com>\n   * @param {Object} target\n   * @param {Object} src\n   * @returns {Object} target\n   */\n  PSVUtils.deepmerge = function(target, src) {\n    var first = src;\n\n    return (function merge(target, src) {\n      if (Array.isArray(src)) {\n        if (!target || !Array.isArray(target)) {\n          target = [];\n        }\n        else {\n          target.length = 0;\n        }\n        src.forEach(function(e, i) {\n          target[i] = merge(null, e);\n        });\n      }\n      else if (typeof src === 'object') {\n        if (!target || Array.isArray(target)) {\n          target = {};\n        }\n        Object.keys(src).forEach(function(key) {\n          if (typeof src[key] !== 'object' || !src[key] || !PSVUtils.isPlainObject(src[key])) {\n            target[key] = src[key];\n          }\n          else if (src[key] != first) {\n            if (!target[key]) {\n              target[key] = merge(null, src[key]);\n            }\n            else {\n              merge(target[key], src[key]);\n            }\n          }\n        });\n      }\n      else {\n        target = src;\n      }\n\n      return target;\n    }(target, src));\n  };\n\n  /**\n   * @summary Clones an object\n   * @param {Object} src\n   * @returns {Object}\n   */\n  PSVUtils.clone = function(src) {\n    return PSVUtils.deepmerge(null, src);\n  };\n\n  /**\n   * @summary Normalize mousewheel values accross browsers\n   * @description From Facebook's Fixed Data Table\n   * {@link https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js}\n   * @copyright Facebook\n   * @param {MouseWheelEvent} event\n   * @returns {{spinX: number, spinY: number, pixelX: number, pixelY: number}}\n   */\n  PSVUtils.normalizeWheel = function(event) {\n    var PIXEL_STEP  = 10;\n    var LINE_HEIGHT = 40;\n    var PAGE_HEIGHT = 800;\n\n    var sX = 0, sY = 0; // spinX, spinY\n    var pX = 0, pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail'      in event) { sY = event.detail; }\n    if ('wheelDelta'  in event) { sY = -event.wheelDelta / 120; }\n    if ('wheelDeltaY' in event) { sY = -event.wheelDeltaY / 120; }\n    if ('wheelDeltaX' in event) { sX = -event.wheelDeltaX / 120; }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in event && event.axis === event.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in event) { pY = event.deltaY; }\n    if ('deltaX' in event) { pX = event.deltaX; }\n\n    if ((pX || pY) && event.deltaMode) {\n      if (event.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      }\n      else {                      // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) { sX = (pX < 1) ? -1 : 1; }\n    if (pY && !sY) { sY = (pY < 1) ? -1 : 1; }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  };\n\n  /**\n   * @callback ForEach\n   * @memberOf PSVUtils\n   * @param {*} value\n   * @param {string} key\n   */\n\n  /**\n   * Loops over enumerable properties of an object\n   * @param {object} object\n   * @param {ForEach} callback\n   */\n  PSVUtils.forEach = function(object, callback) {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  };\n\n  return PSVUtils;\n});"]}
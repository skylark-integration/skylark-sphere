{"version":3,"sources":["PSVError.js"],"names":["define","PSVError","message","this","Error","captureStackTrace","stack","prototype","Object","create","name","constructor"],"mappings":";;;;;;;AAAAA,UAAU,WACT,aAMA,SAASC,EAASC,GAChBC,KAAKD,QAAUA,EAGX,sBAAuBE,MACzBA,MAAMC,kBAAkBF,KAAMF,GAG9BE,KAAKG,OAAQ,IAAKF,OAASE,MAS/B,OALAL,EAASM,UAAYC,OAAOC,OAAOL,MAAMG,WACzCN,EAASM,UAAUG,KAAO,WAC1BT,EAASM,UAAUI,YAAcV,EAG1BA","file":"../PSVError.js","sourcesContent":["define([],function(){\n\t\"use strict\";\n\t/**\n\t * Custom error used in the lib\n\t * @param {string} message\n\t * @constructor\n\t */\n\tfunction PSVError(message) {\n\t  this.message = message;\n\n\t  // Use V8's native method if available, otherwise fallback\n\t  if ('captureStackTrace' in Error) {\n\t    Error.captureStackTrace(this, PSVError);\n\t  }\n\t  else {\n\t    this.stack = (new Error()).stack;\n\t  }\n\t}\n\n\tPSVError.prototype = Object.create(Error.prototype);\n\tPSVError.prototype.name = 'PSVError';\n\tPSVError.prototype.constructor = PSVError;\n\n\n\treturn PSVError;\n});\n"]}
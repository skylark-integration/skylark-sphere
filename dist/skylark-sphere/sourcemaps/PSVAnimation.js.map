{"version":3,"sources":["PSVAnimation.js"],"names":["define","PSVAnimation","options","this","_cancelled","_resolved","self","_promise","Promise","resolve","reject","_resolve","_reject","easing","easings","_start","_options","delay","_delayTimeout","window","setTimeout","requestAnimationFrame","_run","bind","linear","t","inQuad","outQuad","inOutQuad","inCubic","outCubic","inOutCubic","inQuart","outQuart","inOutQuart","inQuint","outQuint","inOutQuint","inSine","Math","cos","PI","outSine","sin","inOutSine","inExpo","pow","outExpo","inOutExpo","inCirc","sqrt","outCirc","inOutCirc","prototype","timestamp","name","progress","duration","current","properties","start","end","onTick","then","onFulfilled","onRejected","p","cancel","undefined","catch","finally","onFinally","cancelAnimationFrame"],"mappings":"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","file":"../PSVAnimation.js","sourcesContent":["define([],function(){\n  \"use strict\";\n  /**\n   * @callback OnTick\n   * @memberOf PSVAnimation\n   * @param {Object[]} properties - current values\n   * @param {float} progress - 0 to 1\n   */\n\n  /**\n   * @summary Interpolation helper for animations\n   * @description\n   * Implements the Promise API with an additional \"cancel\" method.\n   * The promise is resolved when the animation is complete and rejected if the animation is cancelled.\n   * @param {Object} options\n   * @param {Object[]} options.properties\n   * @param {number} options.properties[].start\n   * @param {number} options.properties[].end\n   * @param {int} options.duration\n   * @param {int} [options.delay=0]\n   * @param {string} [options.easing='linear']\n   * @param {PSVAnimation.OnTick} options.onTick - called on each frame\n   * @constructor\n   */\n  function PSVAnimation(options) {\n    if (!(this instanceof PSVAnimation)) {\n      return new PSVAnimation(options);\n    }\n\n    this._cancelled = false;\n    this._resolved = false;\n\n    var self = this;\n\n    this._promise = new Promise(function(resolve, reject) {\n      self._resolve = resolve;\n      self._reject = reject;\n    });\n\n    if (options) {\n      if (!options.easing || typeof options.easing === 'string') {\n        options.easing = PSVAnimation.easings[options.easing || 'linear'];\n      }\n      this._start = null;\n      this._options = options;\n\n      if (options.delay) {\n        this._delayTimeout = window.setTimeout(function() {\n          this._delayTimeout = null;\n          window.requestAnimationFrame(this._run.bind(this));\n        }.bind(this), options.delay);\n      }\n      else {\n\n        window.requestAnimationFrame(this._run.bind(this));\n      }\n    }\n  }\n\n  /**\n   * @summary Collection of easing functions\n   * {@link https://gist.github.com/frederickk/6165768}\n   * @type {Object.<string, Function>}\n   */\n  // @formatter:off\n  // jscs:disable\n  /* jshint ignore:start */\n  PSVAnimation.easings = {\n    linear: function(t) { return t; },\n\n    inQuad: function(t) { return t*t; },\n    outQuad: function(t) { return t*(2-t); },\n    inOutQuad: function(t) { return t<.5 ? 2*t*t : -1+(4-2*t)*t; },\n\n    inCubic: function(t) { return t*t*t; },\n    outCubic: function(t) { return (--t)*t*t+1; },\n    inOutCubic: function(t) { return t<.5 ? 4*t*t*t : (t-1)*(2*t-2)*(2*t-2)+1; },\n\n    inQuart: function(t) { return t*t*t*t; },\n    outQuart: function(t) { return 1-(--t)*t*t*t; },\n    inOutQuart: function(t) { return t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t; },\n\n    inQuint: function(t) { return t*t*t*t*t; },\n    outQuint: function(t) { return 1+(--t)*t*t*t*t; },\n    inOutQuint: function(t) { return t<.5 ? 16*t*t*t*t*t : 1+16*(--t)*t*t*t*t; },\n\n    inSine: function(t) { return 1-Math.cos(t*(Math.PI/2)); },\n    outSine: function(t) { return Math.sin(t*(Math.PI/2)); },\n    inOutSine: function(t) { return .5-.5*Math.cos(Math.PI*t); },\n\n    inExpo: function(t) { return Math.pow(2, 10*(t-1)); },\n    outExpo: function(t) { return 1-Math.pow(2, -10*t); },\n    inOutExpo: function(t) { t=t*2-1; return t<0 ? .5*Math.pow(2, 10*t) : 1-.5*Math.pow(2, -10*t); },\n\n    inCirc: function(t) { return 1-Math.sqrt(1-t*t); },\n    outCirc: function(t) { t--; return Math.sqrt(1-t*t); },\n    inOutCirc: function(t) { t*=2; return t<1 ? .5-.5*Math.sqrt(1-t*t) : .5+.5*Math.sqrt(1-(t-=2)*t); }\n  };\n  /* jshint ignore:end */\n  // jscs:enable\n  // @formatter:on\n\n  /**\n   * @summary Main loop for the animation\n   * @param {int} timestamp\n   * @private\n   */\n  PSVAnimation.prototype._run = function(timestamp) {\n    // the animation has been cancelled\n    if (this._cancelled) {\n      return;\n    }\n\n    // first iteration\n    if (this._start === null) {\n      this._start = timestamp;\n    }\n\n    // compute progress\n    var progress = (timestamp - this._start) / this._options.duration;\n    var current = {};\n    var name;\n\n    if (progress < 1.0) {\n      // interpolate properties\n      for (name in this._options.properties) {\n        if (this._options.properties[name]) {\n          current[name] = this._options.properties[name].start + (this._options.properties[name].end - this._options.properties[name].start) * this._options.easing(progress);\n        }\n      }\n\n      this._options.onTick(current, progress);\n\n      window.requestAnimationFrame(this._run.bind(this));\n    }\n    else {\n      // call onTick one last time with final values\n      for (name in this._options.properties) {\n        if (this._options.properties[name]) {\n          current[name] = this._options.properties[name].end;\n        }\n      }\n\n      this._options.onTick(current, 1.0);\n\n      window.requestAnimationFrame(function() {\n        this._resolved = true;\n        this._resolve();\n      }.bind(this));\n    }\n  };\n\n  /**\n   * @summary Animation chaining\n   * @param {function} onFulfilled - Called when the animation is complete, can return a new animation\n   * @param {function} onRejected - Called when the animation is cancelled\n   * @returns {PSVAnimation}\n   */\n  PSVAnimation.prototype.then = function(onFulfilled, onRejected) {\n    var p = new PSVAnimation();\n\n    // Allow cancellation to climb up the promise chain\n    p._promise.then(null, this.cancel.bind(this));\n\n    this._promise.then(function() {\n      p._resolve(onFulfilled ? onFulfilled() : undefined);\n    }, function() {\n      p._reject(onRejected ? onRejected() : undefined);\n    });\n\n    return p;\n  };\n\n  /**\n   * @summary Alias to `.then(null, onRejected)`\n   * @param {function} onRejected - Called when the animation has been cancelled\n   * @returns {PSVAnimation}\n   */\n  PSVAnimation.prototype.catch = function(onRejected) {\n    return this.then(undefined, onRejected);\n  };\n\n  /**\n   * @summary Alias to `.then(onFinally, onFinally)`\n   * @param {function} onFinally - Called when the animation is either complete or cancelled\n   * @returns {PSVAnimation}\n   */\n  PSVAnimation.prototype.finally = function(onFinally) {\n    return this.then(onFinally, onFinally);\n  };\n\n  /**\n   * @summary Cancels the animation\n   */\n  PSVAnimation.prototype.cancel = function() {\n    if (!this._cancelled && !this._resolved) {\n      this._cancelled = true;\n      this._reject();\n\n      if (this._delayTimeout) {\n        window.cancelAnimationFrame(this._delayTimeout);\n        this._delayTimeout = null;\n      }\n    }\n  };\n\n  return PSVAnimation;\n});\n"]}
{"version":3,"sources":["buttons/Button.js"],"names":["define","PhotoSphereViewer","PSVComponent","PSVUtils","PSVNavBarButton","navbar","call","this","id","undefined","constructor","enabled","prototype","Object","create","icon","iconActive","_setIcon","psv","config","lang","container","title","addEventListener","e","_onClick","stopPropagation","bind","supported","then","hide","show","destroy","toggleActive","active","toggleClass","disable","classList","add","enable","remove","innerHTML","ICONS","querySelector","setAttribute"],"mappings":";;;;;;;AAAAA,QACE,eACA,6BACA,eACA,SACAC,EACAC,EACAC,GAEA,aAYA,SAASC,EAAgBC,GACvBH,EAAaI,KAAKC,KAAMF,GAOxBE,KAAKC,QAAKC,EAENF,KAAKG,YAAYF,KACnBD,KAAKC,GAAKD,KAAKG,YAAYF,IAQ7BD,KAAKI,SAAU,EA2IjB,OAxIAP,EAAgBQ,UAAYC,OAAOC,OAAOZ,EAAaU,WACvDR,EAAgBQ,UAAUF,YAAcN,EAOxCA,EAAgBI,GAAK,KAOrBJ,EAAgBW,KAAO,KAOvBX,EAAgBY,WAAa,KAM7BZ,EAAgBQ,UAAUE,OAAS,WACjCZ,EAAaU,UAAUE,OAAOR,KAAKC,MAE/BA,KAAKG,YAAYK,MACnBR,KAAKU,SAASV,KAAKG,YAAYK,MAG7BR,KAAKC,IAAMD,KAAKW,IAAIC,OAAOC,KAAKb,KAAKC,MACvCD,KAAKc,UAAUC,MAAQf,KAAKW,IAAIC,OAAOC,KAAKb,KAAKC,KAGnDD,KAAKc,UAAUE,iBAAiB,QAAS,SAASC,GAC5CjB,KAAKI,SACPJ,KAAKkB,WAEPD,EAAEE,mBACFC,KAAKpB,OAEP,IAAIqB,EAAYrB,KAAKqB,YACS,mBAAnBA,EAAUC,MACnBtB,KAAKuB,OAELF,EAAUC,KAAK,SAASD,GAClBA,GACFrB,KAAKwB,QAEPJ,KAAKpB,QAECqB,GACRrB,KAAKuB,QAQT1B,EAAgBQ,UAAUoB,QAAU,WAClC9B,EAAaU,UAAUoB,QAAQ1B,KAAKC,OAOtCH,EAAgBQ,UAAUgB,UAAY,WACpC,OAAO,GAOTxB,EAAgBQ,UAAUqB,aAAe,SAASC,GAChD/B,EAASgC,YAAY5B,KAAKc,UAAW,qBAAsBa,GAEvD3B,KAAKG,YAAYM,YACnBT,KAAKU,SAASiB,EAAS3B,KAAKG,YAAYM,WAAaT,KAAKG,YAAYK,OAO1EX,EAAgBQ,UAAUwB,QAAU,WAClC7B,KAAKc,UAAUgB,UAAUC,IAAI,wBAE7B/B,KAAKI,SAAU,GAMjBP,EAAgBQ,UAAU2B,OAAS,WACjChC,KAAKc,UAAUgB,UAAUG,OAAO,wBAEhCjC,KAAKI,SAAU,GASjBP,EAAgBQ,UAAUK,SAAW,SAASF,EAAMM,GAC7CA,IACHA,EAAYd,KAAKc,WAEfN,GACFM,EAAUoB,UAAYxC,EAAkByC,MAAM3B,GAE9CM,EAAUsB,cAAc,OAAOC,aAAa,QAAS,mBAGrDvB,EAAUoB,UAAY,IAS1BrC,EAAgBQ,UAAUa,SAAW,aAI9BrB","file":"../../buttons/Button.js","sourcesContent":["define([\n  \"../_psv/ctoc\",\n  \"../components/PSVComponent\",\n  \"../PSVUtils\"\n],function(\n  PhotoSphereViewer,\n  PSVComponent,\n  PSVUtils\n){\n  \"use strict\";\n  /**\n   * @module components/buttons\n   */\n\n  /**\n   * Navigation bar button class\n   * @param {module:components.PSVNavBar} navbar\n   * @constructor\n   * @extends module:components.PSVComponent\n   * @memberof module:components/buttons\n   */\n  function PSVNavBarButton(navbar) {\n    PSVComponent.call(this, navbar);\n\n    /**\n     * @summary Unique identifier of the button\n     * @member {string}\n     * @readonly\n     */\n    this.id = undefined;\n\n    if (this.constructor.id) {\n      this.id = this.constructor.id;\n    }\n\n    /**\n     * @summary State of the button\n     * @member {boolean}\n     * @readonly\n     */\n    this.enabled = true;\n  }\n\n  PSVNavBarButton.prototype = Object.create(PSVComponent.prototype);\n  PSVNavBarButton.prototype.constructor = PSVNavBarButton;\n\n  /**\n   * @summary Unique identifier of the button\n   * @member {string}\n   * @readonly\n   */\n  PSVNavBarButton.id = null;\n\n  /**\n   * @summary SVG icon name injected in the button\n   * @member {string}\n   * @readonly\n   */\n  PSVNavBarButton.icon = null;\n\n  /**\n   * @summary SVG icon name injected in the button when it is active\n   * @member {string}\n   * @readonly\n   */\n  PSVNavBarButton.iconActive = null;\n\n  /**\n   * @summary Creates the button\n   * @protected\n   */\n  PSVNavBarButton.prototype.create = function() {\n    PSVComponent.prototype.create.call(this);\n\n    if (this.constructor.icon) {\n      this._setIcon(this.constructor.icon);\n    }\n\n    if (this.id && this.psv.config.lang[this.id]) {\n      this.container.title = this.psv.config.lang[this.id];\n    }\n\n    this.container.addEventListener('click', function(e) {\n      if (this.enabled) {\n        this._onClick();\n      }\n      e.stopPropagation();\n    }.bind(this));\n\n    var supported = this.supported();\n    if (typeof supported.then === 'function') {\n      this.hide();\n\n      supported.then(function(supported) {\n        if (supported) {\n          this.show();\n        }\n      }.bind(this));\n    }\n    else if (!supported) {\n      this.hide();\n    }\n  };\n\n  /**\n   * @summary Destroys the button\n   * @protected\n   */\n  PSVNavBarButton.prototype.destroy = function() {\n    PSVComponent.prototype.destroy.call(this);\n  };\n\n  /**\n   * @summary Checks if the button can be displayed\n   * @returns {boolean|Promise<boolean>}\n   */\n  PSVNavBarButton.prototype.supported = function() {\n    return true;\n  };\n\n  /**\n   * @summary Changes the active state of the button\n   * @param {boolean} [active] - forced state\n   */\n  PSVNavBarButton.prototype.toggleActive = function(active) {\n    PSVUtils.toggleClass(this.container, 'psv-button--active', active);\n\n    if (this.constructor.iconActive) {\n      this._setIcon(active ? this.constructor.iconActive : this.constructor.icon);\n    }\n  };\n\n  /**\n   * @summary Disables the button\n   */\n  PSVNavBarButton.prototype.disable = function() {\n    this.container.classList.add('psv-button--disabled');\n\n    this.enabled = false;\n  };\n\n  /**\n   * @summary Enables the button\n   */\n  PSVNavBarButton.prototype.enable = function() {\n    this.container.classList.remove('psv-button--disabled');\n\n    this.enabled = true;\n  };\n\n  /**\n   * @summary Set the button icon from {@link PhotoSphereViewer.ICONS}\n   * @param {string} icon\n   * @param {HTMLElement} [container] - default is the main button container\n   * @private\n   */\n  PSVNavBarButton.prototype._setIcon = function(icon, container) {\n    if (!container) {\n      container = this.container;\n    }\n    if (icon) {\n      container.innerHTML = PhotoSphereViewer.ICONS[icon];\n      // classList not supported on IE11, className is read-only !!!!\n      container.querySelector('svg').setAttribute('class', 'psv-button-svg');\n    }\n    else {\n      container.innerHTML = '';\n    }\n  };\n\n  /**\n   * @summary Action when the button is clicked\n   * @private\n   * @abstract\n   */\n  PSVNavBarButton.prototype._onClick = function() {\n\n  };\n\n  return PSVNavBarButton;\n});\n\n"]}
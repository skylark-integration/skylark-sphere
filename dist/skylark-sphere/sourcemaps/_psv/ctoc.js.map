{"version":3,"sources":["_psv/ctoc.js"],"names":["define","Emitter","PhotoSphereViewer","inherit","prototype","off","event","f","call","this","on","e","args","Array","slice","arguments","handleEvent","arg1","arg2","arg3","one"],"mappings":";;;;;;;AAAAA,QACC,yBACC,SACAC,GAEA,aAQA,IAAIC,EAAoBD,EAAQE,YAoChC,OAjCAD,EAAkBE,UAAUC,IAAM,SAASC,EAAMC,GAC/C,OAAQN,EAAQG,UAAUC,IAAIG,KAAKC,KAAKH,EAAMC,EAAE,KAAOD,IAAUC,IAGnEL,EAAkBE,UAAUM,GAAK,SAASJ,EAAMC,GAC5C,MAAiB,iBAANA,EAEFN,EAAQG,UAAUM,GAAGF,KAAKC,KAAKH,EAAMC,EAAE,KAAOD,GAAS,SAASK,GAErE,OADAA,EAAEC,KAAOC,MAAMT,UAAUU,MAAMN,KAAKO,UAAU,GACvCR,EAAES,YAAYL,KAGhBV,EAAQG,UAAUM,GAAGF,KAAKC,KAAKH,EAAMC,EAAE,KAAOD,GAAS,SAASK,EAAEM,EAAKC,EAAKC,GACjF,OAAOZ,EAAEC,KAAKC,KAAKQ,EAAKC,EAAKC,IAC7BV,OAKRP,EAAkBE,UAAUgB,IAAM,SAASd,EAAMC,GAC/C,MAAiB,iBAANA,EAEAN,EAAQG,UAAUM,GAAGF,KAAKC,KAAKH,EAAM,GAAG,KAAKC,EAAE,KAAOD,GAAS,SAASK,GAE7E,OADAA,EAAEC,KAAOC,MAAMT,UAAUU,MAAMN,KAAKO,UAAU,GACvCR,EAAES,YAAYL,IACrBF,MAAK,GAEAR,EAAQG,UAAUM,GAAGF,KAAKC,KAAKH,EAAM,GAAG,KAAKC,EAAEE,MAAK,IAM1DP","file":"../../_psv/ctoc.js","sourcesContent":["define([\r\n\t\"skylark-langx/Emitter\",\r\n],function(\r\n  Emitter\r\n){\r\n  \"use strict\";\r\n  /**\r\n   * Viewer class\r\n   * @param {Object} options - see {@link http://photo-sphere-viewer.js.org/#options}\r\n   * @constructor\r\n   * @fires PhotoSphereViewer.ready\r\n   * @throws {PSVError} when the configuration is incorrect\r\n   */\r\n  var PhotoSphereViewer = Emitter.inherit({\r\n  });\r\n\r\n  PhotoSphereViewer.prototype.off = function(event,f) {\r\n    return  Emitter.prototype.off.call(this,event,f[\"$$\" + event] || f);    \r\n  };\r\n\r\n  PhotoSphereViewer.prototype.on = function(event,f) {\r\n      if (typeof f === 'object') {\r\n\r\n        return Emitter.prototype.on.call(this,event,f[\"$$\" + event] = function(e){\r\n          e.args = Array.prototype.slice.call(arguments,1);\r\n          return f.handleEvent(e);\r\n        });\r\n     } else {\r\n        return Emitter.prototype.on.call(this,event,f[\"$$\" + event] = function(e,arg1,arg2,arg3) {\r\n          return f.call(this,arg1,arg2,arg3);\r\n        },this);\r\n     }\r\n\r\n  };\r\n\r\n  PhotoSphereViewer.prototype.one = function(event,f) {\r\n    if (typeof f === 'object') {\r\n\r\n        return Emitter.prototype.on.call(this,event,\"\",null,f[\"$$\" + event] = function(e){\r\n          e.args = Array.prototype.slice.call(arguments,1);\r\n          return f.handleEvent(e);\r\n        },this,true);\r\n     } else {\r\n        return Emitter.prototype.on.call(this,event,\"\",null,f,this,true);\r\n     }\r\n\r\n  };\r\n\r\n\r\n  return PhotoSphereViewer;\r\n\t\r\n});"]}
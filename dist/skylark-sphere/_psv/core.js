/**
 * skylark-sphere - A version of sphere that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-sphere/
 * @license MIT
 */
define(["skylark-threejs","./ctoc","../doT","../PSVError","../PSVUtils","../PSVAnimation","../components/PSVHUD","../components/PSVLoader","../components/PSVNavBar","../components/PSVNotification","../components/PSVOverlay","../components/PSVPanel","../components/PSVTooltip"],function(e,t,i,n,o,a,r,s,h,c,p,l,d){"use strict";return t.prototype._construct=function(a){if(t.SYSTEM.loaded||t._loadSystem(),this.config=o.clone(t.DEFAULTS),o.deepmerge(this.config,a),!a.container)throw new n("No value given for container.");if(!t.SYSTEM.isCanvasSupported)throw new n("Canvas is not supported.");if(!t.SYSTEM.isWebGLSupported)throw new n("WebGL is not supported.");if(this.config.longitude_range&&2!==this.config.longitude_range.length&&(this.config.longitude_range=null,console.warn("PhotoSphereViewer: longitude_range must have exactly two elements.")),this.config.latitude_range?2!==this.config.latitude_range.length?(this.config.latitude_range=null,console.warn("PhotoSphereViewer: latitude_range must have exactly two elements.")):this.config.latitude_range[0]>this.config.latitude_range[1]&&(this.config.latitude_range=[this.config.latitude_range[1],this.config.latitude_range[0]],console.warn("PhotoSphereViewer: latitude_range values must be ordered.")):void 0===this.config.tilt_up_max&&void 0===this.config.tilt_down_max||(this.config.latitude_range=[void 0!==this.config.tilt_down_max?this.config.tilt_down_max-Math.PI/4:-o.HalfPI,void 0!==this.config.tilt_up_max?this.config.tilt_up_max+Math.PI/4:o.HalfPI],console.warn("PhotoSphereViewer: tilt_up_max and tilt_down_max are deprecated, use latitude_range instead.")),this.config.max_fov<this.config.min_fov){var u=this.config.max_fov;this.config.max_fov=this.config.min_fov,this.config.min_fov=u,console.warn("PhotoSphereViewer: max_fov cannot be lower than min_fov.")}this.config.cache_texture&&(!o.isInteger(this.config.cache_texture)||this.config.cache_texture<0)&&(this.config.cache_texture=t.DEFAULTS.cache_texture,console.warn("PhotoSphereViewer: invalid value for cache_texture")),"panorama_roll"in this.config&&(this.config.sphere_correction.roll=this.config.panorama_roll,console.warn("PhotoSphereViewer: panorama_roll is deprecated, use sphere_correction.roll instead")),"gyroscope"in this.config&&console.warn("PhotoSphereViewer: gyroscope is deprecated, the control is automatically created if DeviceOrientationControls.js is loaded"),!0===this.config.keyboard&&(this.config.keyboard=o.clone(t.DEFAULTS.keyboard)),this.config.min_fov=o.bound(this.config.min_fov,1,179),this.config.max_fov=o.bound(this.config.max_fov,1,179),null===this.config.default_fov?this.config.default_fov=this.config.max_fov/2+this.config.min_fov/2:this.config.default_fov=o.bound(this.config.default_fov,this.config.min_fov,this.config.max_fov),null===this.config.anim_lat?this.config.anim_lat=this.config.default_lat:this.config.anim_lat=o.parseAngle(this.config.anim_lat,!0),this.config.longitude_range&&(this.config.longitude_range=this.config.longitude_range.map(function(e){return o.parseAngle(e)})),this.config.latitude_range&&(this.config.latitude_range=this.config.latitude_range.map(function(e){return o.parseAngle(e,!0)})),this.config.anim_speed=o.parseSpeed(this.config.anim_speed),this.config.caption&&!this.config.navbar&&(this.config.navbar=["caption"]),!0===this.config.fisheye?this.config.fisheye=1:!1===this.config.fisheye&&(this.config.fisheye=0),this.parent="string"==typeof a.container?document.getElementById(a.container):a.container,this.container=null,this.loader=null,this.navbar=null,this.hud=null,this.panel=null,this.tooltip=null,this.notification=null,this.overlay=null,this.canvas_container=null,this.renderer=null,this.stereoEffect=null,this.noSleep=null,this.scene=null,this.camera=null,this.mesh=null,this.raycaster=null,this.doControls=null,this.prop={needsUpdate:!0,isCubemap:void 0,position:{longitude:0,latitude:0},ready:!1,direction:null,anim_speed:0,zoom_lvl:0,vFov:0,hFov:0,aspect:0,move_speed:.1,moving:!1,zooming:!1,start_mouse_x:0,start_mouse_y:0,mouse_x:0,mouse_y:0,mouse_history:[],gyro_alpha_offset:0,pinch_dist:0,main_reqid:null,orientation_cb:null,autorotate_cb:null,animation_promise:null,loading_promise:null,start_timeout:null,dblclick_data:null,dblclick_timeout:null,cache:[],size:{width:0,height:0},pano_data:{full_width:0,full_height:0,cropped_width:0,cropped_height:0,cropped_x:0,cropped_y:0}},Object.keys(t.TEMPLATES).forEach(function(e){this.config.templates[e]||(this.config.templates[e]=t.TEMPLATES[e]),"string"==typeof this.config.templates[e]&&(this.config.templates[e]=i.template(this.config.templates[e]))},this),this.parent.photoSphereViewer=this,this.container=document.createElement("div"),this.container.classList.add("psv-container"),this.parent.appendChild(this.container),null!==this.config.size&&this._setViewerSize(this.config.size),this._onResize();var g=(this.config.default_fov-this.config.min_fov)/(this.config.max_fov-this.config.min_fov)*100;this.config.default_zoom_lvl=g-2*(g-50),this.prop.move_speed=e.Math.degToRad(this.config.move_speed/t.SYSTEM.pixelRatio),this.loader=new s(this),this.loader.hide(),this.navbar=new h(this),this.navbar.hide(),this.hud=new r(this),this.hud.hide(),this.panel=new l(this),this.tooltip=new d(this.hud),this.notification=new c(this),this.overlay=new p(this),this._bindEvents(),this.config.panorama&&this.setPanorama(this.config.panorama),this.one("render",function(){this.config.navbar&&(this.container.classList.add("psv-container--has-navbar"),this.navbar.show()),this.hud.show(),this.config.markers&&(this.config.markers.forEach(function(e){this.hud.addMarker(e,!1)},this),this.hud.renderMarkers()),!1!==this.config.time_anim&&(this.prop.start_timeout=window.setTimeout(this.startAutorotate.bind(this),this.config.time_anim)),setTimeout(function(){this._run(),this.trigger("ready")}.bind(this),0)}.bind(this)),t.SYSTEM.touchEnabled.then(function(e){e&&this.container.classList.add("psv-is-touch")}.bind(this))},t.prototype._run=function(e){this.trigger("before-render",e||+new Date),this.prop.needsUpdate&&(this._render(),this.prop.needsUpdate=!1),this.prop.main_reqid=window.requestAnimationFrame(this._run.bind(this))},t.prototype._render=function(){this.prop.direction=this.sphericalCoordsToVector3(this.prop.position),this.camera.position.set(0,0,0),this.camera.lookAt(this.prop.direction),this.config.fisheye&&this.camera.position.copy(this.prop.direction).multiplyScalar(this.config.fisheye/2).negate(),this.camera.aspect=this.prop.aspect,this.camera.fov=this.prop.vFov,this.camera.updateProjectionMatrix(),(this.stereoEffect||this.renderer).render(this.scene,this.camera),this.trigger("render")},t.prototype._loadXMP=function(e){return this.config.usexmpdata?new Promise(function(t){var i=0,a=new XMLHttpRequest;this.config.with_credentials&&(a.withCredentials=!0),a.onreadystatechange=function(){if(4===a.readyState){if(200!==a.status&&201!==a.status&&202!==a.status&&0!==a.status)throw this.container.textContent="Cannot load image",new n("Cannot load image");this.loader.setProgress(100);var e=a.responseText,r=e.indexOf("<x:xmpmeta"),s=e.indexOf("</x:xmpmeta>"),h=e.substring(r,s),c=null;-1!==r&&-1!==s&&-1!==h.indexOf("GPano:")&&((c={full_width:parseInt(o.getXMPValue(h,"FullPanoWidthPixels")),full_height:parseInt(o.getXMPValue(h,"FullPanoHeightPixels")),cropped_width:parseInt(o.getXMPValue(h,"CroppedAreaImageWidthPixels")),cropped_height:parseInt(o.getXMPValue(h,"CroppedAreaImageHeightPixels")),cropped_x:parseInt(o.getXMPValue(h,"CroppedAreaLeftPixels")),cropped_y:parseInt(o.getXMPValue(h,"CroppedAreaTopPixels"))}).full_width&&c.full_height&&c.cropped_width&&c.cropped_height||(console.warn("PhotoSphereViewer: invalid XMP data"),c=null)),t(c)}else 3===a.readyState&&this.loader.setProgress(i+=10)}.bind(this),a.onprogress=function(e){if(e.lengthComputable){var t=parseInt(e.loaded/e.total*100);t>i&&(i=t,this.loader.setProgress(i))}}.bind(this),a.onerror=function(e){throw this.container.textContent="Cannot load image",reject(e),new n("Cannot load image")}.bind(this),a.open("GET",e,!0),a.send(null)}.bind(this)):Promise.resolve(null)},t.prototype._loadTexture=function(e){var i=[];if(Array.isArray(e)){if(6!==e.length)throw new n("Must provide exactly 6 image paths when using cubemap.");for(var o=0;o<6;o++)i[o]=e[t.CUBE_MAP[o]];e=i}else if("object"==typeof e){if(!t.CUBE_HASHMAP.every(function(t){return!!e[t]}))throw new n("Must provide exactly left, front, right, back, top, bottom when using cubemap.");t.CUBE_HASHMAP.forEach(function(t,n){i[n]=e[t]}),e=i}if(Array.isArray(e)){if(!1===this.prop.isCubemap)throw new n("The viewer was initialized with an equirectangular panorama, cannot switch to cubemap.");return this.config.fisheye&&console.warn("PhotoSphereViewer: fisheye effect with cubemap texture can generate distorsions."),this.config.cache_texture===t.DEFAULTS.cache_texture&&(this.config.cache_texture*=6),this.prop.isCubemap=!0,this._loadCubemapTexture(e)}if(!0===this.prop.isCubemap)throw new n("The viewer was initialized with an cubemap, cannot switch to equirectangular panorama.");return this.prop.isCubemap=!1,this._loadEquirectangularTexture(e)},t.prototype._loadEquirectangularTexture=function(i){if(this.config.cache_texture){var a=this.getPanoramaCache(i);if(a)return this.prop.pano_data=a.pano_data,Promise.resolve(a.image)}return this._loadXMP(i).then(function(a){return new Promise(function(r,s){var h=new e.ImageLoader,c=a?100:0;this.config.with_credentials?h.setCrossOrigin("use-credentials"):h.setCrossOrigin("anonymous");h.load(i,function(n){var s;c=100,this.loader.setProgress(c),this.trigger("panorama-load-progress",i,c),!a&&this.config.pano_data&&(a=o.clone(this.config.pano_data)),a||(a={full_width:n.width,full_height:n.height,cropped_width:n.width,cropped_height:n.height,cropped_x:0,cropped_y:0}),this.prop.pano_data=a;var h=Math.min(a.full_width,t.SYSTEM.maxTextureWidth)/a.full_width;if(1!==h||a.cropped_width!==a.full_width||a.cropped_height!==a.full_height){var p=o.clone(a);p.full_width*=h,p.full_height*=h,p.cropped_width*=h,p.cropped_height*=h,p.cropped_x*=h,p.cropped_y*=h,n.width=p.cropped_width,n.height=p.cropped_height;var l=document.createElement("canvas");l.width=p.full_width,l.height=p.full_height,l.getContext("2d").drawImage(n,p.cropped_x,p.cropped_y,p.cropped_width,p.cropped_height),s=new e.Texture(l)}else s=new e.Texture(n);s.needsUpdate=!0,s.minFilter=e.LinearFilter,s.generateMipmaps=!1,this.config.cache_texture&&this._putPanoramaCache({panorama:i,image:s,pano_data:a}),r(s)}.bind(this),function(e){if(e.lengthComputable){var t=parseInt(e.loaded/e.total*100);t>c&&(c=t,this.loader.setProgress(c),this.trigger("panorama-load-progress",i,c))}}.bind(this),function(e){throw this.container.textContent="Cannot load image",s(e),new n("Cannot load image")}.bind(this))}.bind(this))}.bind(this))},t.prototype._loadCubemapTexture=function(i){return new Promise(function(a,r){var s=new e.ImageLoader,h=[0,0,0,0,0,0],c=[],p=0;this.config.with_credentials?s.setCrossOrigin("use-credentials"):s.setCrossOrigin("anonymous");for(var l=function(n,r){p++,h[n]=100,this.loader.setProgress(o.sum(h)/6),this.trigger("panorama-load-progress",i[n],h[n]);var s=Math.min(r.width,t.SYSTEM.maxTextureWidth/2)/r.width;if(1!==s){var l=document.createElement("canvas");l.width=r.width*s,l.height=r.height*s,l.getContext("2d").drawImage(r,0,0,l.width,l.height),c[n]=new e.Texture(l)}else c[n]=new e.Texture(r);this.config.cache_texture&&this._putPanoramaCache({panorama:i[n],image:c[n]}),6===p&&(c.forEach(function(t){t.needsUpdate=!0,t.minFilter=e.LinearFilter,t.generateMipmaps=!1}),a(c))},d=function(e,t){if(t.lengthComputable){var n=parseInt(t.loaded/t.total*100);n>h[e]&&(h[e]=n,this.loader.setProgress(o.sum(h)/6),this.trigger("panorama-load-progress",i[e],h[e]))}},u=function(e,t){throw this.container.textContent="Cannot load image",r(t),new n("Cannot load image "+e)},g=0;g<6;g++){if(this.config.cache_texture){var f=this.getPanoramaCache(i[g]);if(f){p++,h[g]=100,c[g]=f.image;continue}}s.load(i[g],l.bind(this,g),d.bind(this,g),u.bind(this,g))}6===p&&a(c)}.bind(this))},t.prototype._setTexture=function(e){if(this.scene||this._createScene(),this.prop.isCubemap)for(var t=0;t<6;t++)this.mesh.material[t].map&&this.mesh.material[t].map.dispose(),this.mesh.material[t].map=e[t];else this.mesh.material.map&&this.mesh.material.map.dispose(),this.mesh.material.map=e;this.trigger("panorama-loaded"),this._render()},t.prototype._createScene=function(){this.raycaster=new e.Raycaster,this.renderer=new e.WebGLRenderer,this.renderer.setSize(this.prop.size.width,this.prop.size.height),this.renderer.setPixelRatio(t.SYSTEM.pixelRatio),this.camera=new e.PerspectiveCamera(this.config.default_fov,this.prop.size.width/this.prop.size.height,1,3*t.SPHERE_RADIUS),this.camera.position.set(0,0,0),this.scene=new e.Scene,this.scene.add(this.camera),this.prop.isCubemap?this.mesh=this._createCubemap():this.mesh=this._createSphere(),this.scene.add(this.mesh),this.canvas_container=document.createElement("div"),this.canvas_container.className="psv-canvas-container",this.renderer.domElement.className="psv-canvas",this.container.appendChild(this.canvas_container),this.canvas_container.appendChild(this.renderer.domElement)},t.prototype._createSphere=function(i){i=i||1;var n=new e.SphereGeometry(t.SPHERE_RADIUS*i,t.SPHERE_VERTICES,t.SPHERE_VERTICES,-o.HalfPI),a=new e.MeshBasicMaterial({side:e.DoubleSide}),r=new e.Mesh(n,a);return r.scale.x=-1,r},t.prototype._setSphereCorrection=function(e,t){this.cleanSphereCorrection(t),e.rotation.set(t.tilt,t.pan,t.roll)},t.prototype._createCubemap=function(i){i=i||1;for(var n=new e.BoxGeometry(2*t.SPHERE_RADIUS*i,2*t.SPHERE_RADIUS*i,2*t.SPHERE_RADIUS*i,t.CUBE_VERTICES,t.CUBE_VERTICES,t.CUBE_VERTICES),o=[],a=0;a<6;a++)o.push(new e.MeshBasicMaterial({side:e.BackSide}));var r=new e.Mesh(n,o);return r.scale.set(1,1,-1),r},t.prototype._transition=function(t,i){var n,o=this.isExtendedPosition(i),r=void 0!==i.zoom;if(this.prop.isCubemap?(o&&(console.warn("PhotoSphereViewer: cannot perform cubemap transition to different position."),o=!1),(n=this._createCubemap(.9)).material.forEach(function(e,i){e.map=t[i],e.transparent=!0,e.opacity=0})):((n=this._createSphere(.9)).material.map=t,n.material.transparent=!0,n.material.opacity=0,i.sphere_correction&&this._setSphereCorrection(n,i.sphere_correction)),o){this.cleanPosition(i);var s=new e.Vector3(0,1,0);n.rotateOnWorldAxis(s,i.longitude-this.prop.position.longitude);var h=new e.Vector3(0,1,0).cross(this.camera.getWorldDirection()).normalize();n.rotateOnWorldAxis(h,i.latitude-this.prop.position.latitude),(this.config.latitude_range||this.config.longitude_range)&&(this.config.longitude_range=this.config.latitude_range=null,console.warn("PhotoSphereViewer: trying to perform transition with longitude_range and/or latitude_range, ranges cleared."))}return this.scene.add(n),this.needsUpdate(),new a({properties:{opacity:{start:0,end:1},zoom:r?{start:this.prop.zoom_lvl,end:i.zoom}:void 0},duration:this.config.transition.duration,easing:"outCubic",onTick:function(e){if(this.prop.isCubemap)for(var t=0;t<6;t++)n.material[t].opacity=e.opacity;else n.material.opacity=e.opacity;r&&this.zoom(e.zoom),this.needsUpdate()}.bind(this)}).then(function(){this._setTexture(t),this.scene.remove(n),n.geometry.dispose(),n.geometry=null,o&&this.rotate(i),i.sphere_correction?this._setSphereCorrection(this.mesh,i.sphere_correction):this._setSphereCorrection(this.mesh,{})}.bind(this))},t.prototype._reverseAutorotate=function(){var e=this,t=-this.config.anim_speed,i=this.config.longitude_range;this.config.longitude_range=null,new a({properties:{speed:{start:this.config.anim_speed,end:0}},duration:300,easing:"inSine",onTick:function(t){e.config.anim_speed=t.speed}}).then(function(){return new a({properties:{speed:{start:0,end:t}},duration:300,easing:"outSine",onTick:function(t){e.config.anim_speed=t.speed}})}).then(function(){e.config.longitude_range=i,e.config.anim_speed=t})},t.prototype._putPanoramaCache=function(e){if(!this.config.cache_texture)throw new n("Cannot add panorama to cache, cache_texture is disabled");var t=this.getPanoramaCache(e.panorama);t?(t.image=e.image,t.pano_data=e.pano_data):(this.prop.cache=this.prop.cache.slice(0,this.config.cache_texture-1),this.prop.cache.unshift(e)),this.trigger("panorama-cached",e.panorama)},t.prototype._stopAll=function(){this.stopAutorotate(),this.stopAnimation(),this.stopGyroscopeControl(),this.stopStereoView()},t});
//# sourceMappingURL=../sourcemaps/_psv/core.js.map
